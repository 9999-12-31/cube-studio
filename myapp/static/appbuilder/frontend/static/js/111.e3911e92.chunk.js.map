{"version":3,"file":"static/js/111.e3911e92.chunk.js","mappings":"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","sources":["components/EchartCore/EchartCore.tsx","components/InputSearch/InputSearch.tsx","components/TableBox/TableBox.tsx","components/TitleHeader/TitleHeader.tsx","components/ModalForm/ModalForm.tsx","components/MixSearch/MixSearch.tsx","components/FileUploadPlus/FileUploadPlus.tsx","components/DynamicForm/DynamicForm.tsx","pages/ADUGTemplate.tsx","pages/ChartOptionTempalte.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport * as echarts from 'echarts';\r\n// import * as echarts from 'echarts/core';\r\n// import {\r\n//     BarChart,\r\n//     // 系列类型的定义后缀都为 SeriesOption\r\n//     BarSeriesOption,\r\n//     PieChart,\r\n//     PieSeriesOption,\r\n//     LineChart,\r\n//     LineSeriesOption,\r\n//     HeatmapChart,\r\n//     HeatmapSeriesOption\r\n// } from 'echarts/charts';\r\n// import {\r\n//     TitleComponent,\r\n//     // 组件类型的定义后缀都为 ComponentOption\r\n//     TitleComponentOption,\r\n//     TooltipComponent,\r\n//     TooltipComponentOption,\r\n//     GridComponent,\r\n//     GridComponentOption,\r\n//     // 数据集组件\r\n//     DatasetComponent,\r\n//     DatasetComponentOption,\r\n//     LegendComponent,\r\n//     // 内置数据转换器组件 (filter, sort)\r\n//     TransformComponent,\r\n//     CalendarComponentOption,\r\n//     CalendarComponent,\r\n//     VisualMapComponent,\r\n//     VisualMapComponentOption,\r\n//     ToolboxComponent\r\n// } from 'echarts/components';\r\nimport { LabelLayout, UniversalTransition } from 'echarts/features';\r\nimport { CanvasRenderer } from 'echarts/renderers';\r\nimport './EchartCore.less';\r\nimport { Spin } from 'antd';\r\nimport { FieldNumberOutlined } from '@ant-design/icons';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport type ECOption = echarts.EChartsOption\r\n// 通过 ComposeOption 来组合出一个只有必须组件和图表的 Option 类型\r\n// export type ECOption = echarts.ComposeOption<\r\n//     | BarSeriesOption\r\n//     | LineSeriesOption\r\n//     | TitleComponentOption\r\n//     | TooltipComponentOption\r\n//     | GridComponentOption\r\n//     | DatasetComponentOption\r\n//     | CalendarComponentOption\r\n//     | HeatmapSeriesOption\r\n//     | VisualMapComponentOption\r\n//     | PieSeriesOption\r\n// >;\r\n\r\n// // 注册必须的组件\r\n// echarts.use([\r\n//     LegendComponent,\r\n//     TitleComponent,\r\n//     TooltipComponent,\r\n//     GridComponent,\r\n//     DatasetComponent,\r\n//     TransformComponent,\r\n//     CalendarComponent,\r\n//     VisualMapComponent,\r\n//     ToolboxComponent,\r\n//     BarChart,\r\n//     LineChart,\r\n//     PieChart,\r\n//     LabelLayout,\r\n//     HeatmapChart,\r\n//     UniversalTransition,\r\n//     CanvasRenderer\r\n// ]);\r\n\r\ninterface IProps {\r\n    // option: ECOption\r\n    option: echarts.EChartsOption\r\n    loading?: boolean\r\n    title?: string\r\n    style?: React.CSSProperties\r\n    unit?: string\r\n    data?: {\r\n        xData: any[]\r\n        yData: any[]\r\n    }\r\n    isNoData?: boolean\r\n}\r\n\r\nconst defaultChartStyle: React.CSSProperties = {\r\n    height: 300\r\n}\r\n\r\n// https://echarts.apache.org/handbook/zh/how-to/data/dynamic-data\r\nexport default function EchartCore(props: IProps) {\r\n    const [chartInstance, setChartInstance] = useState<echarts.ECharts>()\r\n    const id = Math.random().toString(36).substring(2);\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const option = {}\r\n\r\n    useEffect(() => {\r\n        const chartDom = document.getElementById(id)\r\n        if (chartDom) {\r\n            const chart = echarts.init(chartDom);\r\n            chart.setOption({ ...option, ...props.option })\r\n\r\n            if (!chartInstance) {\r\n                setChartInstance(chart)\r\n            }\r\n        }\r\n    }, [props.option, props.data])\r\n\r\n    return (\r\n        <Spin spinning={props.loading}>\r\n            <div className=\"chart-container\">\r\n                <div id={id} style={{ ...defaultChartStyle, ...props.style }}></div>\r\n                {\r\n                    props.isNoData ? <div className=\"chart-nodata\">\r\n                        <div>{t('暂无数据')}</div>\r\n                    </div> : null\r\n                }\r\n            </div>\r\n        </Spin>\r\n    )\r\n}\r\n","import { SearchOutlined } from '@ant-design/icons';\r\nimport { Input } from 'antd';\r\nimport React, { useState, ChangeEvent, useEffect } from 'react';\r\nimport './InputSearch.less';\r\n\r\ninterface IProps {\r\n    labelName?: string,\r\n    width?: string,\r\n    placeholder?: string,\r\n    maxLength?: number,\r\n    maxHeight?: number,\r\n    // 是否开启前端搜索匹配\r\n    isOpenSearchMatch?: boolean,\r\n    loading?: boolean | JSX.Element,\r\n    // 配置提示列表\r\n    options?: string[],\r\n    // 当配置value时，即为可控组件\r\n    value?: string,\r\n    disabled?: boolean\r\n    // 按回车时回调\r\n    onSearch?: (value: string) => void,\r\n    // 输入字符、按下回车时回调\r\n    onChange?: (value: string) => void,\r\n    // 点击option中的item\r\n    onClick?: (value: string) => void,\r\n    // 滚动条到底时触发\r\n    onScrollButtom?: () => void\r\n}\r\n\r\nexport default function InputSearch(props: IProps): JSX.Element {\r\n    const id = Math.random().toString(36).substring(2);\r\n    let inputRef: any;\r\n\r\n    const [dataCache, setDataCache] = useState<string[]>(props.options || []);\r\n    const [value, setValue] = useState(props.value || '');\r\n\r\n    useEffect(() => {\r\n        const dataFilter = props.isOpenSearchMatch ? (props.options || []).filter(item => {\r\n            return item.indexOf(value) !== -1;\r\n        }) : (props.options || []);\r\n        setDataCache(dataFilter);\r\n    }, [props.options]);\r\n\r\n    useEffect(() => {\r\n        setValue(props.value || '');\r\n        // props.onChange && props.onChange(props.value);\r\n    }, [props.value]);\r\n\r\n    const handleChange = (value: string): void => {\r\n        setValue(value);\r\n        props.onChange && props.onChange(value);\r\n    };\r\n\r\n    const handleClick = (value: string): void => {\r\n        handleChange(value);\r\n        props.onClick && props.onClick(value);\r\n    };\r\n\r\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\r\n        // 回车\r\n        if (e.nativeEvent.keyCode === 13) {\r\n            inputRef.blur && inputRef.blur();\r\n            props.onSearch && props.onSearch(e.currentTarget.value);\r\n        }\r\n    };\r\n\r\n    const highlightKeyWord = (item: string): JSX.Element => {\r\n        const keyWord = value;\r\n        const index = item.indexOf(value);\r\n        if (index === -1) {\r\n            return <span>{item}</span>;\r\n        }\r\n        const preStr = item.substring(0, index);\r\n        const nextStr = item.substring(index + value.length);\r\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\r\n    };\r\n\r\n    const debounce = (fun: any, time = 500): any => {\r\n        let timer: ReturnType<typeof setTimeout>;\r\n        return function (...args: any): void {\r\n            clearTimeout(timer);\r\n            timer = setTimeout(() => {\r\n                fun && fun.apply(null, [...args]);\r\n            }, time);\r\n        };\r\n    };\r\n\r\n    const debounceScroll = debounce(props.onScrollButtom);\r\n\r\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\r\n        e.stopPropagation();\r\n        // console.log({\r\n        //     event: e,\r\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\r\n        //     currentTarget: e.currentTarget,\r\n        //     scrollTop: e.currentTarget.scrollTop,\r\n        //     scrollHeight: e.currentTarget.scrollHeight,\r\n        //     clientHeight: e.currentTarget.clientHeight\r\n        // });\r\n        const { currentTarget } = e;\r\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\r\n        const difference = scrollHeight - clientHeight - scrollTop;\r\n        if (difference < 20) {\r\n            props.onScrollButtom && debounceScroll();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"select-down-modern\">\r\n            {\r\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\r\n            }\r\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\r\n                <Input\r\n                    style={{ width: '100%' }}\r\n                    disabled={props.disabled}\r\n                    id={id}\r\n                    placeholder={props.placeholder || ''}\r\n                    maxLength={props.maxLength || 200}\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\r\n                    onKeyPress={handleEnterKey}\r\n                    value={value}\r\n                    ref={element => inputRef = element}\r\n                />\r\n                <SearchOutlined className=\"p-a r0 mr8\" />\r\n            </div>\r\n\r\n            {\r\n                // 输入提示\r\n                dataCache.length ? <ul className=\"select-option shadow\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\r\n                    {\r\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\r\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\r\n                        </div> : null\r\n                    }\r\n                    {\r\n                        dataCache.map((item, index) => {\r\n                            return <li className=\"ellip1\" onMouseDown={(): void => handleClick(item)} key={index}>{highlightKeyWord(item)}</li>;\r\n                        })\r\n                    }\r\n                </ul> : null\r\n            }\r\n        </div>\r\n    );\r\n}","import React, { ReactNode, useEffect, useState } from 'react';\r\nimport { Row, Col, Space, Table, ConfigProvider, Button, Modal, Tabs, message, Checkbox } from 'antd';\r\nimport './TableBox.less';\r\nimport { TablePaginationConfig } from 'antd/lib/table/Table';\r\nimport emptyImg from '../../images/emptyBg.png';\r\nimport { GetRowKey, SorterResult, TableRowSelection } from 'antd/lib/table/interface';\r\n// import ExportJsonExcel from 'js-export-excel';\r\nimport { Resizable } from 'react-resizable';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst CopyToClipboard = require('react-copy-to-clipboard');\r\n\r\ninterface IProps {\r\n\tsize?: 'large' | 'middle' | 'small'\r\n\ttableKey?: string\r\n\trowKey?: string | GetRowKey<any>;\r\n\ttitleNode?: string | ReactNode;\r\n\tbuttonNode?: ReactNode;\r\n\tdataSource: any;\r\n\tcolumns: any;\r\n\tpagination?: false | TablePaginationConfig;\r\n\tscroll?:\r\n\t| ({\r\n\t\tx?: string | number | true | undefined;\r\n\t\ty?: string | number | undefined;\r\n\t} & {\r\n\t\tscrollToFirstRowOnChange?: boolean | undefined;\r\n\t})\r\n\t| undefined;\r\n\tloading?: boolean;\r\n\trowSelection?: TableRowSelection<any>;\r\n\tcancelExportData?: boolean;\r\n\tonChange?: (\r\n\t\tpagination: TablePaginationConfig,\r\n\t\tfilters: Record<string, (string | number | boolean)[] | null>,\r\n\t\tsorter: SorterResult<any> | SorterResult<any>[],\r\n\t) => void;\r\n}\r\n\r\nconst ResizableTitle = ({ onResize, width, ...restProps }: any) => {\r\n\tif (!width) {\r\n\t\treturn <th {...restProps} />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Resizable\r\n\t\t\twidth={width}\r\n\t\t\theight={0}\r\n\t\t\thandle={\r\n\t\t\t\t<span\r\n\t\t\t\t\tclassName=\"react-resizable-handle\"\r\n\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\tonResize={onResize}\r\n\t\t\tdraggableOpts={{ enableUserSelectHack: false }}\r\n\t\t>\r\n\t\t\t<th {...restProps} style={{ ...restProps?.style, userSelect: 'none' }} />\r\n\t\t</Resizable>\r\n\t);\r\n};\r\n\r\nconst TableBox = (props: IProps) => {\r\n\tconst [exportDataVisible, setExportDataVisible] = useState(false);\r\n\tconst [dataFormat, setDataFormat] = useState<{ header: any[]; data: any[] }>({\r\n\t\theader: [],\r\n\t\tdata: [],\r\n\t});\r\n\tconst [filterValue, setFilterValue] = useState<any[]>([]);\r\n\r\n\t// 可伸缩列设置\r\n\tconst [cols, setCols] = useState(props.columns);\r\n\tconst handleResize = (index: any) => {\r\n\t\treturn (_: any, { size }: any) => {\r\n\t\t\tif (size.width < 100) return\r\n\t\t\tconst temp = [...cols];\r\n\t\t\ttemp[index] = { ...temp[index], width: size.width };\r\n\t\t\tconst tableWidth = temp.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 200\r\n\t\t\tlocalStorage.setItem(props.tableKey || '', JSON.stringify(temp))\r\n\t\t\t// console.log(currentTableScroll, temp);\r\n\t\t\tsetCurrentTableScroll({ ...currentTableScroll, x: tableWidth })\r\n\t\t\tsetCols(temp);\r\n\t\t};\r\n\t};\r\n\tconst customColumns = cols.map((col: any, index: any) => {\r\n\t\treturn {\r\n\t\t\t...col,\r\n\t\t\twidth: col.width || 200,\r\n\t\t\tonHeaderCell: (column: any) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\twidth: column.width,\r\n\t\t\t\t\tonResize: handleResize(index),\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t};\r\n\t});\r\n\tconst [currentTableScroll, setCurrentTableScroll] = useState(props.scroll)\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCols(props.columns);\r\n\t}, [props.columns]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCurrentTableScroll(props.scroll);\r\n\t}, [props.scroll]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.dataSource) {\r\n\t\t\tconst columns = props.columns.filter((item: any) => ~filterValue.indexOf(item.dataIndex));\r\n\t\t\thanddleFilterHeader(columns, props.dataSource);\r\n\t\t}\r\n\t}, [props.dataSource, props.columns]);\r\n\r\n\tconst customizeRenderEmpty = () => (\r\n\t\t<Row justify=\"center\" align=\"middle\" style={{ height: 360, flexDirection: 'column' }}>\r\n\t\t\t<img src={emptyImg} style={{ width: 266 }} alt=\"\" />\r\n\t\t\t<div>{t('暂无数据')}</div>\r\n\t\t</Row>\r\n\t);\r\n\r\n\tconst handdleFilterHeader = (dataColumns = [], data: any[]) => {\r\n\t\tconst columns = dataColumns.map((item: any) => item.dataIndex).filter((item: string) => item !== 'handle');\r\n\t\tconst sheetHeader = dataColumns.map((item: any) => item.title).filter((item: string) => item !== t('操作'));\r\n\t\tconst tarData: any = [];\r\n\r\n\t\tdata.forEach((dataRow: any) => {\r\n\t\t\tconst row: any = {};\r\n\t\t\tcolumns.map((colName: string) => {\r\n\t\t\t\tconst res = dataRow[colName];\r\n\t\t\t\trow[colName] = res || '';\r\n\t\t\t});\r\n\t\t\ttarData.push(row);\r\n\t\t});\r\n\r\n\t\tsetDataFormat({\r\n\t\t\theader: sheetHeader,\r\n\t\t\tdata: tarData,\r\n\t\t});\r\n\t};\r\n\r\n\t// const handleClickOutputExcel = () => {\r\n\t// \tconst option: any = {};\r\n\t// \toption.fileName = 'result';\r\n\t// \toption.datas = [\r\n\t// \t\t{\r\n\t// \t\t\tsheetData: dataFormat.data,\r\n\t// \t\t\tsheetName: 'sheet',\r\n\t// \t\t\tsheetHeader: dataFormat.header,\r\n\t// \t\t},\r\n\t// \t];\r\n\t// \tconst toExcel = new ExportJsonExcel(option);\r\n\t// \ttoExcel.saveExcel();\r\n\t// };\r\n\r\n\tconst handleExportJira = () => {\r\n\t\tconst header = dataFormat.header;\r\n\t\tconst data = dataFormat.data;\r\n\t\tlet str = '';\r\n\t\tif (header.length && data.length) {\r\n\t\t\tstr =\r\n\t\t\t\t'|' +\r\n\t\t\t\theader.join('|') +\r\n\t\t\t\t'|' +\r\n\t\t\t\t`\r\n`;\r\n\t\t\tdata.forEach((row: any) => {\r\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\r\n\t\t\t\t\tif (item === '') {\r\n\t\t\t\t\t\treturn ' ';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t});\r\n\t\t\t\tstr =\r\n\t\t\t\t\tstr +\r\n\t\t\t\t\t'|' +\r\n\t\t\t\t\trowKey.join('|') +\r\n\t\t\t\t\t'|' +\r\n\t\t\t\t\t`\r\n`;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tstr = '';\r\n\t\t}\r\n\r\n\t\treturn str;\r\n\t};\r\n\r\n\tconst handleExportText = () => {\r\n\t\tconst header = dataFormat.header;\r\n\t\tconst data = dataFormat.data;\r\n\t\tlet str = '';\r\n\t\tif (header.length && data.length) {\r\n\t\t\tstr =\r\n\t\t\t\theader.join('\t') +\r\n\t\t\t\t`\r\n`;\r\n\t\t\tdata.forEach((row: any) => {\r\n\t\t\t\tconst rowKey = Object.values(row).map((item) => {\r\n\t\t\t\t\tif (item === '') {\r\n\t\t\t\t\t\treturn ' ';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t});\r\n\t\t\t\tstr =\r\n\t\t\t\t\tstr +\r\n\t\t\t\t\trowKey.join('\t') +\r\n\t\t\t\t\t`\r\n`;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tstr = '';\r\n\t\t}\r\n\t\treturn str;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Space className=\"tablebox\" direction=\"vertical\" size=\"middle\">\r\n\t\t\t<Modal\r\n\t\t\t\twidth={1000}\r\n\t\t\t\tmaskClosable={false}\r\n\t\t\t\tcentered={true}\r\n\t\t\t\tbodyStyle={{ maxHeight: 500, overflow: 'auto' }}\r\n\t\t\t\tvisible={exportDataVisible}\r\n\t\t\t\ttitle={t('导出数据')}\r\n\t\t\t\tonCancel={() => {\r\n\t\t\t\t\tsetExportDataVisible(false);\r\n\t\t\t\t}}\r\n\t\t\t\tfooter={null}\r\n\t\t\t>\r\n\t\t\t\t<div style={{ position: 'relative' }}>\r\n\t\t\t\t\t<div className=\"mb16\"><span className=\"pr8\">{t('选择需要导出的列')}：</span><Checkbox.Group\r\n\t\t\t\t\t\toptions={props.columns\r\n\t\t\t\t\t\t\t.map((item: any) => ({ label: item.title, value: item.dataIndex }))\r\n\t\t\t\t\t\t\t.filter((item: any) => item.value !== 'handle')}\r\n\t\t\t\t\t\tdefaultValue={[]}\r\n\t\t\t\t\t\tvalue={filterValue}\r\n\t\t\t\t\t\tonChange={(values: any) => {\r\n\t\t\t\t\t\t\tsetFilterValue(values);\r\n\t\t\t\t\t\t\tconst columns = props.columns.filter((item: any) => ~values.indexOf(item.dataIndex));\r\n\t\t\t\t\t\t\thanddleFilterHeader(columns, props.dataSource);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/></div>\r\n\t\t\t\t\t<div style={{ position: 'absolute', right: 0, bottom: 0 }}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\ttype=\"link\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetFilterValue(\r\n\t\t\t\t\t\t\t\t\tprops.columns\r\n\t\t\t\t\t\t\t\t\t\t.map((item: any) => item.dataIndex)\r\n\t\t\t\t\t\t\t\t\t\t.filter((item: any) => item !== 'handle'),\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\thanddleFilterHeader(props.columns, props.dataSource);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t('全选')}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\ttype=\"link\"\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tsetFilterValue([]);\r\n\t\t\t\t\t\t\t\thanddleFilterHeader([], props.dataSource);\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{t('反选')}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Tabs>\r\n\t\t\t\t\t<Tabs.TabPane tab=\"Wiki格式\" key=\"jira\">\r\n\t\t\t\t\t\t<CopyToClipboard text={handleExportJira()} onCopy={() => message.success(t('已复制到粘贴板'))}>\r\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\r\n\t\t\t\t\t\t\t\t<code>{handleExportJira()}</code>\r\n\t\t\t\t\t\t\t</pre>\r\n\t\t\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t\t</Tabs.TabPane>\r\n\t\t\t\t\t<Tabs.TabPane tab=\"Text格式\" key=\"test\">\r\n\t\t\t\t\t\t<CopyToClipboard text={handleExportText()} onCopy={() => message.success(t('已复制到粘贴板'))}>\r\n\t\t\t\t\t\t\t<pre style={{ cursor: 'pointer', minHeight: 100 }}>\r\n\t\t\t\t\t\t\t\t<code>{handleExportText()}</code>\r\n\t\t\t\t\t\t\t</pre>\r\n\t\t\t\t\t\t</CopyToClipboard>\r\n\t\t\t\t\t</Tabs.TabPane>\r\n\t\t\t\t\t{/* <Tabs.TabPane tab=\"Excel格式\" key=\"excel\">\r\n\t\t\t\t\t\t<Row justify=\"center\" align=\"middle\" style={{ minHeight: 100 }}>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" onClick={handleClickOutputExcel}>\r\n\t\t\t\t\t\t\t\t\t导出Excel\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</Tabs.TabPane> */}\r\n\t\t\t\t</Tabs>\r\n\t\t\t</Modal>\r\n\t\t\t{\r\n\t\t\t\tprops.titleNode || props.buttonNode || !props.cancelExportData ? <Row justify=\"space-between\" align=\"middle\">\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Space align=\"center\">{props.titleNode}</Space>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<Space align=\"center\">\r\n\t\t\t\t\t\t\t{props.buttonNode}\r\n\t\t\t\t\t\t\t{props.cancelExportData ? null : (\r\n\t\t\t\t\t\t\t\t<Button style={{ marginLeft: 6 }} onClick={() => setExportDataVisible(true)}>\r\n\t\t\t\t\t\t\t\t\t{t('导出数据')}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Space>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row> : null\r\n\t\t\t}\r\n\t\t\t<ConfigProvider renderEmpty={customizeRenderEmpty}>\r\n\t\t\t\t<Table\r\n\t\t\t\t\tsize={props.size || 'middle'}\r\n\t\t\t\t\trowKey={props.rowKey ? props.rowKey : 'id'}\r\n\t\t\t\t\tdataSource={props.dataSource}\r\n\t\t\t\t\t// columns={props.columns}\r\n\t\t\t\t\tcomponents={{ header: { cell: ResizableTitle } }}\r\n\t\t\t\t\tcolumns={customColumns}\r\n\t\t\t\t\tpagination={props.pagination !== false ? { ...props.pagination } : false}\r\n\t\t\t\t\tscroll={currentTableScroll}\r\n\t\t\t\t\tloading={props.loading}\r\n\t\t\t\t\tonChange={props.onChange}\r\n\t\t\t\t\trowSelection={props.rowSelection}\r\n\t\t\t\t/>\r\n\t\t\t</ConfigProvider>\r\n\t\t</Space>\r\n\t);\r\n};\r\n\r\nexport default TableBox;\r\n","import React, { ReactNode } from 'react';\r\nimport { Row, Typography, Col, Space } from 'antd';\r\nimport './TitleHeader.less';\r\n\r\nconst { Title } = Typography;\r\n\r\ninterface IProps {\r\n    title: ReactNode | string;\r\n    children?: ReactNode;\r\n    noBorderBottom?: boolean;\r\n    breadcrumbs?: ReactNode | string;\r\n}\r\n\r\nconst TitleHeader = (props: IProps) => {\r\n    const styles: React.CSSProperties = { position: 'sticky', top: 0 }\r\n    return (\r\n        <Row\r\n            className=\"title-header\"\r\n            justify=\"space-between\"\r\n            align=\"middle\"\r\n            style={props.noBorderBottom ? { borderBottom: 'none', ...styles } : styles}>\r\n            <div>\r\n                <Title className=\"d-il mr12\" level={5} style={{ marginBottom: 10 }}>\r\n                    {props.title}\r\n                </Title>\r\n                <div className=\"d-il\">\r\n                    {props.breadcrumbs}\r\n                </div>\r\n            </div>\r\n\r\n            <Col>\r\n                <Space>{props.children ? props.children : null}</Space>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default TitleHeader;\r\n","import React, { ReactNode, useEffect, useMemo, useState } from 'react';\r\nimport { Modal, Form, Spin, Input, FormInstance } from 'antd';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface ModalFormProps {\r\n\tvisible: boolean;\r\n\tonCreate: (values: any, form: FormInstance<any>) => void;\r\n\tonCancel: () => void;\r\n\tloading?: boolean;\r\n\tchildren?: any;\r\n\ttitle?: string;\r\n\tformData?: Record<string, any>;\r\n\twidth?: number;\r\n\tonValuesChange?: () => {}\r\n}\r\n\r\nconst ModalForm = (props: ModalFormProps): JSX.Element => {\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst [form] = Form.useForm();\r\n\tconst [, updateState] = useState<any>();\r\n\tconst forceUpdate = React.useCallback(() => updateState({}), []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.formData) {\r\n\t\t\tform.setFieldsValue(props.formData);\r\n\t\t}\r\n\t}, [props]);\r\n\r\n\tconst [formChangeRes, setFormChangeRes] = useState<{\r\n\t\tcurrentChange: Record<string, any>\r\n\t\tallValues: Record<string, any>\r\n\t}>({\r\n\t\tcurrentChange: {},\r\n\t\tallValues: {}\r\n\t})\r\n\r\n\t// const propsChildrenMemo = useMemo(() => props.children(form), [])\r\n\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\t// confirmLoading={props.loading}\r\n\t\t\tdestroyOnClose={true}\r\n\t\t\tmaskClosable={false}\r\n\t\t\twidth={props.width || 680}\r\n\t\t\tvisible={props.visible}\r\n\t\t\ttitle={props.title}\r\n\t\t\tokText={t('确定')}\r\n\t\t\tcancelText={t('取消')}\r\n\t\t\tonCancel={() => {\r\n\t\t\t\tform.resetFields();\r\n\t\t\t\tprops.onCancel();\r\n\t\t\t}}\r\n\t\t\tonOk={() => {\r\n\t\t\t\tconsole.log(form.getFieldsValue())\r\n\t\t\t\tform.validateFields()\r\n\t\t\t\t\t.then((values) => {\r\n\t\t\t\t\t\tprops.onCreate(values, form);\r\n\t\t\t\t\t\t// form.resetFields();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((info) => {\r\n\t\t\t\t\t\t// console.log('Validate Failed:', info);\r\n\t\t\t\t\t});\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Spin spinning={props.loading}>\r\n\t\t\t\t<Form onValuesChange={(value, allValues) => {\r\n\t\t\t\t\tsetFormChangeRes({\r\n\t\t\t\t\t\tcurrentChange: value,\r\n\t\t\t\t\t\tallValues\r\n\t\t\t\t\t})\r\n\t\t\t\t}} labelCol={{ span: 5 }} wrapperCol={{ span: 19 }} form={form} layout=\"horizontal\" name=\"form_in_modal\">\r\n\t\t\t\t\t{props.children && Object.prototype.toString.call(props.children) === '[object Function]'\r\n\t\t\t\t\t\t? props.children(form, formChangeRes)\r\n\t\t\t\t\t\t: props.children}\r\n\t\t\t\t</Form>\r\n\t\t\t</Spin>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default ModalForm;\r\n","import React, { ReactNode, useState, useEffect, ReactText } from 'react';\r\nimport { Form, Row, Col, Input, Select, Button } from 'antd';\r\nimport { DeleteOutlined, PlusOutlined, DownOutlined, UpOutlined } from '@ant-design/icons';\r\nimport './MixSearch.less';\r\nimport { LabeledValue } from 'antd/lib/select';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst { Option } = Select;\r\nexport interface IMixSearchParamItem {\r\n\tname: string\r\n\ttype: TMixSearchType\r\n\ttitle?: string\r\n\tdefalutValue?: any\r\n\tplaceHolder?: string\r\n\toption?: LabeledValue[]\r\n\tmultiple?: boolean\r\n\tindexKey?: number\r\n\tused?: boolean\r\n}\r\n\r\nexport type TMixSearchType = 'input' | 'select' | 'datePicker' | 'rangePicker'\r\n\r\ninterface IProps {\r\n\tparams?: IMixSearchParamItem[]\r\n\tvalues?: Array<{ key: ReactText | undefined, value: ReactText | undefined }>\r\n\tonChange: (values: Array<{ key: ReactText | undefined, value: ReactText | undefined }>) => void;\r\n}\r\n\r\nconst MixSearch = (props: IProps) => {\r\n\tconst [form] = Form.useForm();\r\n\tconst [collapsed, setCollapsed]: [boolean, any] = useState(false);\r\n\tconst [typeArr, setTypeArr]: [(string | undefined)[], any] = useState([]);\r\n\r\n\t// 序列化数据\r\n\tconst formatParamsData = (data?: IMixSearchParamItem[]) => {\r\n\t\treturn (data || []).map((item, indexKey) => ({ ...item, indexKey }))\r\n\t}\r\n\tconst [paramsData, setParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\r\n\tconst [currentParamsData, setCurrentParamsData] = useState<IMixSearchParamItem[]>(formatParamsData(props.params))\r\n\tconst [paramsDataMap, setParamsDataMap] = useState<Map<string, IMixSearchParamItem>>(new Map())\r\n\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.values) {\r\n\t\t\tconst group = props.values.length ? props.values : [{\r\n\t\t\t\tkey: undefined,\r\n\t\t\t\tvalue: undefined\r\n\t\t\t}]\r\n\t\t\tform.setFieldsValue({\r\n\t\t\t\tgroup\r\n\t\t\t})\r\n\r\n\t\t\tconst tarData = [...currentParamsData]\r\n\t\t\tfor (let i = 0; i < tarData.length; i++) {\r\n\t\t\t\tfor (let j = 0; j < group.length; j++) {\r\n\t\t\t\t\tconst value = group[j];\r\n\t\t\t\t\tif (value !== undefined && group[j].key === tarData[i].name) {\r\n\t\t\t\t\t\ttarData[i].used = true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetCurrentParamsData(tarData)\r\n\t\t}\r\n\t}, [props.values])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.params && props.params.length) {\r\n\t\t\tconst formatData = formatParamsData(props.params)\r\n\t\t\tsetParamsData(formatData)\r\n\t\t\tconst dataMap = paramsDataMap\r\n\t\t\tfor (let i = 0; i < formatData.length; i++) {\r\n\t\t\t\tconst param = formatData[i];\r\n\t\t\t\tdataMap.set(param.name, param)\r\n\t\t\t}\r\n\t\t\tsetParamsDataMap(dataMap)\r\n\t\t}\r\n\t}, [props.params])\r\n\r\n\t/**利用表单获取查询字段 */\r\n\tconst handleFinishForm = async (values: any): Promise<void> => {\r\n\t\tconsole.log(values);\r\n\t\tconst preVal = values['group'].filter(((item: any) => !!item.key))\r\n\t\tconst tarVal = preVal.map((item: any) => ({ key: item.key, value: item.value }))\r\n\t\tprops.onChange(tarVal);\r\n\t};\r\n\r\n\t/**展开收起 */\r\n\tconst handleCollapsed = (): void => {\r\n\t\tsetCollapsed(!collapsed);\r\n\t};\r\n\r\n\t/**选择筛选类型 */\r\n\tconst handleSelectType = (name: string, index: number): void => {\r\n\t\tform.resetFields([['group', index, 'value']]);\r\n\t\tlet arr = [...typeArr];\r\n\t\tarr[index] = name;\r\n\t\tsetTypeArr(arr);\r\n\t};\r\n\r\n\t/**根据选择的类型，渲染input或select */\r\n\tconst handleRenderValueEl = (index: number): ReactNode => {\r\n\t\tlet key = form.getFieldValue(['group', index, 'key']);\r\n\t\tif (key) {\r\n\t\t\tconst currentItem = paramsDataMap.get(key)\r\n\t\t\tif (currentItem?.type === 'input') {\r\n\t\t\t\treturn <Input\r\n\t\t\t\t\tstyle={{ width: '65%' }}\r\n\t\t\t\t\tdefaultValue={currentItem.defalutValue}\r\n\t\t\t\t\tplaceholder={currentItem.placeHolder}\r\n\t\t\t\t\tonPressEnter={() => handlePressEnter()} />\r\n\t\t\t} else if (currentItem?.type === 'select') {\r\n\t\t\t\tconst currentOptions = currentItem?.option || []\r\n\t\t\t\treturn <Select\r\n\t\t\t\t\tstyle={{ width: '65%' }}\r\n\t\t\t\t\tdropdownMatchSelectWidth={500}\r\n\t\t\t\t\tshowSearch\r\n\t\t\t\t\tmode={key === 'label' ? 'multiple' : undefined}\r\n\t\t\t\t\toptionFilterProp=\"label\"\r\n\t\t\t\t\toptions={currentOptions.map(item => ({ label: item.label, value: item.value }))}\r\n\t\t\t\t// onDropdownVisibleChange={(open) => handleDropdown(open, key)}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn <Input style={{ width: '65%' }} onPressEnter={() => handlePressEnter()} />;\r\n\t\t}\r\n\t};\r\n\r\n\t/**下拉获取对应的数据，并判断是否存在下拉数据，没有则请求，有则不请求 */\r\n\t// const handleDropdown = async (open: boolean, key: string): Promise<void> => {\r\n\t// \tif (open) {\r\n\t// \t\tif (selectionData[key]) {\r\n\t// \t\t\treturn;\r\n\t// \t\t}\r\n\t// \t\ttry {\r\n\t// \t\t\tlet res = await getSelections(key);\r\n\t// \t\t\tlet data = { ...selectionData };\r\n\t// \t\t\tdata[key] = res.data.data;\r\n\t// \t\t\tsetSelectionData(data);\r\n\t// \t\t} catch (error) { }\r\n\t// \t}\r\n\t// };\r\n\r\n\t/**输入框回车操作 */\r\n\tconst handlePressEnter = (): void => {\r\n\t\tform.validateFields();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form\r\n\t\t\t// {...formConfig}\r\n\t\t\tclassName=\"cmdb-mixsearch bg-title\"\r\n\t\t\tform={form}\r\n\t\t\tonFinish={handleFinishForm}\r\n\t\t\tinitialValues={{\r\n\t\t\t\tgroup: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: undefined,\r\n\t\t\t\t\t\tvalue: undefined,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Row className=\"cmdb-mixsearch-content\" gutter={16} style={{ marginLeft: 0, marginRight: 0, ...collapsed ? { height: 70 } : { height: 'auto' } }}>\r\n\t\t\t\t<Form.List name={`group`}>\r\n\t\t\t\t\t{(fields, { add, remove }) => {\r\n\t\t\t\t\t\treturn <>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tfields.map((field, index) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Col span={8} key={`mixSearch_${field.key}_${index}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Row align=\"middle\" gutter={8}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* <Col className=\"cmdb-mixsearch-name\">名称</Col> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Input.Group compact>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'key']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: t('请选择key') }]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// initialValue={'testParams'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ width: '35%' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={t('请选择')}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(value: string) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// handleSelectType(value, index)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst selectActionRemove = (value: string) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).filter((item: any) => !!item).map((item: any) => item.key)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === value) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else if (!usedKey.includes(item.name)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectActionRemove(value)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{currentParamsData.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Option style={{ display: item.used ? 'none' : 'inherit' }} key={`mixSearch_${item.name}_${index}`} value={item.name}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.title || item.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnoStyle\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshouldUpdate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={[field.name, 'value']}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trules={[{ required: false, message: t('请填写value') }]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{handleRenderValueEl(index)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Input.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{(\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-delete\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst usedKey = (form.getFieldValue('group') || []).map((item: any) => item ? item.key : undefined)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tarData = [...currentParamsData]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (usedKey[index]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < tarData.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst item = tarData[i];\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (item.name === usedKey[index]) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarData[i].used = false\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetCurrentParamsData(tarData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremove(index)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* {index === fields.length - 1 && index < (paramsData.length - 1) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tadd()\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t\t\t\t)} */}\r\n\t\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{paramsData.length !== fields.length && (\r\n\t\t\t\t\t\t\t\t<Col className=\"cmdb-mixsearch-add d-il\" onClick={() => {\r\n\t\t\t\t\t\t\t\t\tadd()\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t<PlusOutlined />\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}}\r\n\t\t\t\t</Form.List>\r\n\r\n\t\t\t\t<Col flex={1}>\r\n\t\t\t\t\t<Row justify=\"end\">\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\t\t\t{t('查询')}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"cmdb-mixsearch-collapsed\">\r\n\t\t\t\t<Row onClick={() => handleCollapsed()} justify=\"center\" align=\"middle\">\r\n\t\t\t\t\t{collapsed ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Col>{t('展开')}</Col>\r\n\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<DownOutlined />\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<Col>{t('收起')}</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<UpOutlined />\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t</Row>\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default MixSearch;\r\n","import { AudioOutlined, CloseOutlined, DeleteColumnOutlined, DeleteFilled, DeleteOutlined, InboxOutlined, LoadingOutlined, PlusOutlined, VideoCameraAddOutlined } from '@ant-design/icons';\r\nimport { message } from 'antd';\r\nimport Upload, { RcFile, UploadChangeParam } from 'antd/lib/upload';\r\nimport { UploadFile } from 'antd/lib/upload/interface';\r\nimport React, { useEffect, useState } from 'react'\r\nimport './FileUploadPlus.less';\r\n\r\ninterface Iprops {\r\n    filetype?: TFileType\r\n    onChange?: (value: any) => void\r\n    value?: string[]\r\n    maxCount?: number\r\n    maxSize?: number\r\n    format?: string[]\r\n}\r\n\r\ntype TFileType = 'file' | 'video' | 'audio'\r\n\r\nexport default function FileUploadPlus(props: Iprops) {\r\n    const [visableChangePhone, setVisableChangePhone] = useState(false);\r\n    const [fileLoading, setFileLoading] = useState(false);\r\n    const [imgUrl, setImgUrl] = useState('');\r\n    const [imageList, setImageList] = useState<string[]>([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [fileList, setFileList] = useState<UploadFile[]>([])\r\n\r\n    // useEffect(() => {\r\n    //     setFileList(props.value || [])\r\n    // }, [props.value])\r\n\r\n    function getBase64(img: any, callback: any) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n    // console.log('props', props);\r\n    function beforeUpload(file: RcFile) {\r\n        // console.log('file', file);\r\n\r\n        const maxCount = props.maxCount || 1\r\n        if (fileList.length >= maxCount) {\r\n            message.error('超出文件数量限制');\r\n            return false\r\n        }\r\n        // 'image/jpeg' || 'video/mp4' || 'audio/mpeg'\r\n        const isFormatOk = props.format?.includes(file.type);\r\n        if (!isFormatOk) {\r\n            message.error('文件格式错误');\r\n        }\r\n        const isLt2M = file.size < (props.maxSize || 2 * 1024 * 1024);\r\n        if (!isLt2M) {\r\n            message.error('文件大小限制');\r\n        }\r\n        return isFormatOk && isLt2M;\r\n    }\r\n\r\n    const handleChange = (info: UploadChangeParam) => {\r\n        console.log(info);\r\n\r\n        if (info.file.status === 'uploading') {\r\n            setFileLoading(true);\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            setFileLoading(false);\r\n            setFileList(info.fileList)\r\n            props.onChange && props.onChange(info.fileList)\r\n        }\r\n        if (info.file.status === \"removed\") {\r\n            setFileList(info.fileList)\r\n            props.onChange && props.onChange(info.fileList)\r\n            return;\r\n        }\r\n    };\r\n\r\n    const file2Bin = (file?: RcFile) => {\r\n        console.log('file2Bin', file);\r\n        return new Promise((resolve, reject) => {\r\n            if (file) {\r\n                let name = file.name.replace(/.+\\./, '');\r\n                let filename = file.name;\r\n                let reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n                reader.onload = () => {\r\n                    resolve(reader.result)\r\n                }\r\n            } else {\r\n                reject(undefined)\r\n            }\r\n        })\r\n    }\r\n\r\n    //建立一个可存取到该file的url\r\n    function getObjectURL(file: any) {\r\n        var url = null;\r\n        if ((window as any).createObjectURL != undefined) { // basic\r\n            url = (window as any).createObjectURL(file);\r\n        } else if (window.URL != undefined) { // mozilla(firefox)\r\n            url = window.URL.createObjectURL(file);\r\n        } else if (window.webkitURL != undefined) { // webkit or chrome\r\n            url = window.webkitURL.createObjectURL(file);\r\n        }\r\n        return url;\r\n    }\r\n\r\n    const createMediaPreview = (file: UploadFile<any>, fileIndex: number, filetype: TFileType) => {\r\n        const url = getObjectURL(file)\r\n        const key = Math.random().toString(36).substring(2);\r\n        if (filetype === 'video') {\r\n            return <div className=\"p-r\" key={key}>\r\n                <span\r\n                    onClick={() => {\r\n                        const currentFileList = [...fileList]\r\n                        currentFileList.splice(fileIndex, 1)\r\n                        setFileList(currentFileList)\r\n                        props.onChange && props.onChange(currentFileList)\r\n                    }}\r\n                    className=\"d-il p-a plr8 ptb2 bg-fail\"\r\n                    style={{ top: 0, right: 0, borderBottomLeftRadius: 6, zIndex: 9 }}>\r\n                    <DeleteOutlined style={{ color: '#fff' }} />\r\n                </span>\r\n                <video className=\"w100 mb8\" src={url} controls></video>\r\n            </div>\r\n        } else if (filetype === 'audio') {\r\n            return <div className=\"d-f ac mb8\" key={key}>\r\n                <audio className=\"w100 flex1\" src={url} controls></audio>\r\n                <span\r\n                    onClick={() => {\r\n                        const currentFileList = [...fileList]\r\n                        currentFileList.splice(fileIndex, 1)\r\n                        setFileList(currentFileList)\r\n                        props.onChange && props.onChange(currentFileList)\r\n                    }}\r\n                    className=\"d-il plr8 ptb2 bg-fail\"\r\n                    style={{ borderRadius: 6 }}>\r\n                    <DeleteOutlined style={{ color: '#fff' }} />\r\n                </span>\r\n            </div>\r\n        }\r\n        return file\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {\r\n                    fileList.map((file, fileIndex) => {\r\n                        return createMediaPreview(file, fileIndex, props.filetype || 'file')\r\n                    })\r\n                }\r\n            </div>\r\n            <Upload.Dragger\r\n                // name=\"file\"\r\n                fileList={fileList}\r\n                showUploadList={false}\r\n                customRequest={(options) => {\r\n                    console.log(\"options.file\",options.file);\r\n                    const tarList = [...fileList, options.file as RcFile]\r\n                    console.log(\"tarList\",tarList);\r\n                    setFileList(tarList)\r\n\r\n                    Promise.all(tarList.map((item: any) => file2Bin(item))).then(res => {\r\n                        console.log(res)\r\n                        props.onChange && props.onChange(res)\r\n                    })\r\n\r\n                    // getBase64(options.file, (imageUrl: string) => {\r\n                    //     // setImgUrl(imageUrl);\r\n                    //     const tarList = [...imageList, imageUrl]\r\n                    //     setImageList(tarList)\r\n                    //     setFileLoading(false);\r\n                    //     props.onChange && props.onChange(tarList)\r\n                    // });\r\n                }}\r\n                beforeUpload={beforeUpload}\r\n                onChange={handleChange}\r\n            >\r\n                <p className=\"ant-upload-drag-icon\">\r\n                    {\r\n                        (props.filetype === 'file' || !props.filetype) ? <InboxOutlined /> : null\r\n                    }\r\n                    {\r\n                        props.filetype === 'video' ? <VideoCameraAddOutlined /> : null\r\n                    }\r\n                    {\r\n                        props.filetype === 'audio' ? <AudioOutlined /> : null\r\n                    }\r\n                </p>\r\n                <p className=\"ant-upload-text\">点击或拖拽文件上传</p>\r\n            </Upload.Dragger>\r\n        </>\r\n    )\r\n}\r\n","import { Button, Col, Collapse, DatePicker, Form, FormInstance, Input, message, Radio, Row, Space, Steps, Tooltip } from 'antd'\r\nimport { Rule, RuleObject } from 'antd/lib/form'\r\nimport Select, { LabeledValue } from 'antd/lib/select'\r\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\r\nimport moment from \"moment\";\r\nimport { MinusCircleOutlined, PlusOutlined, QuestionCircleOutlined, SyncOutlined } from '@ant-design/icons';\r\nimport InputSearch from '../InputSearch/InputSearch';\r\nimport 'moment/locale/zh-cn';\r\nimport locale from 'antd/es/date-picker/locale/zh_CN';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FileUploadPlus from '../FileUploadPlus/FileUploadPlus';\r\n\r\ninterface IProps {\r\n    primaryKey?: string\r\n    form?: FormInstance\r\n    config?: IDynamicFormConfigItem[]\r\n    configGroup?: IDynamicFormGroupConfigItem[]\r\n    formChangeRes?: IFormChangeRes\r\n    linkageConfig?: ILinkageConfig[]\r\n    onRetryInfoChange?: (value?: string) => void\r\n}\r\n\r\nexport interface ILinkageConfig {\r\n    dep: string[]\r\n    effect: string\r\n    effectOption: Record<string | number, LabeledValue[]>\r\n}\r\n\r\ninterface IFormChangeRes {\r\n    currentChange: Record<string, any>\r\n    allValues: Record<string, any>\r\n}\r\nexport interface IDynamicFormGroupConfigItem {\r\n    expanded: boolean\r\n    group: string\r\n    config: IDynamicFormConfigItem[]\r\n}\r\n\r\nexport interface IDynamicFormConfigItem {\r\n    name: string\r\n    label: string\r\n    type: TDynamicFormType\r\n    defaultValue?: number | string\r\n    required?: boolean\r\n    placeHolder?: string\r\n    options?: LabeledValue[]\r\n    rules?: Rule[]\r\n    disable?: boolean\r\n    description?: any\r\n    multiple?: boolean,\r\n    list?: IDynamicFormConfigItem[]\r\n    data: Record<string, any>\r\n}\r\n\r\nexport type TDynamicFormType = 'input' | 'textArea' | 'select' | 'datePicker' | 'rangePicker' | 'radio' | 'checkout' | 'match-input' | 'input-select' | 'fileUpload'\r\n\r\nexport function calculateId(strList: string[]): number {\r\n    const str2Num = (str: string) => {\r\n        const res = (str || '').split('').reduce((pre, next) => pre + next.charCodeAt(0), 0)\r\n        return res\r\n    }\r\n    const sum = strList.reduce((pre, next) => pre + str2Num(next), 0)\r\n    return sum\r\n}\r\n\r\nexport default function DynamicForm(props: IProps) {\r\n    const { t, i18n } = useTranslation();\r\n    const [current, setCurrent] = useState(0);\r\n    const [currentConfig, _setCurrentConfig] = useState(props.config)\r\n    const currentConfigRef = useRef(props.config);\r\n    const setCurrentConfig = (data: IDynamicFormConfigItem[] | undefined): void => {\r\n        currentConfigRef.current = data;\r\n        _setCurrentConfig(data);\r\n    };\r\n\r\n    const [currentConfigGroup, _setCurrentConfigGroup] = useState(props.configGroup)\r\n    const currentConfigGroupRef = useRef(props.configGroup);\r\n    const setCurrentConfigGroup = (data: IDynamicFormGroupConfigItem[] | undefined): void => {\r\n        currentConfigGroupRef.current = data;\r\n        _setCurrentConfigGroup(data);\r\n    };\r\n\r\n    const findOptionInLinkAge = (field: string, config: ILinkageConfig[]): Array<{\r\n        effect: string\r\n        option: LabeledValue[]\r\n    }> => {\r\n        const res = config.filter(configItem => configItem.dep.includes(field)).map(item => {\r\n            const values = item.dep.map(item => props.form?.getFieldValue(item)).filter(item => !(item === undefined || item === null))\r\n            const valueId = calculateId(values)\r\n            return {\r\n                effect: item.effect,\r\n                option: item.effectOption[valueId] || []\r\n            }\r\n        })\r\n        return res\r\n    }\r\n\r\n    const setValueInConfig = (field: string, props: Record<string, any>) => {\r\n        const tarConfig = currentConfigRef.current ? [...currentConfigRef.current] : []\r\n        if (tarConfig) {\r\n            for (let i = 0; i < tarConfig.length; i++) {\r\n                const item = tarConfig[i];\r\n                if (item.name === field) {\r\n                    tarConfig[i] = {\r\n                        ...item,\r\n                        ...props\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setCurrentConfig(tarConfig)\r\n    }\r\n\r\n    const setValueInConfigGroup = (field: string, props: Record<string, any>) => {\r\n        const tarConfigGroup = currentConfigGroupRef.current ? [...currentConfigGroupRef.current] : []\r\n        for (let i = 0; i < tarConfigGroup.length; i++) {\r\n            const configList = [...tarConfigGroup[i].config];\r\n            for (let j = 0; j < configList.length; j++) {\r\n                const item = configList[j];\r\n                if (item.name === field) {\r\n                    configList[j] = {\r\n                        ...item,\r\n                        ...props\r\n                    }\r\n                }\r\n            }\r\n            tarConfigGroup[i] = {\r\n                ...tarConfigGroup[i],\r\n                config: configList\r\n            }\r\n        }\r\n        setCurrentConfigGroup(tarConfigGroup)\r\n    }\r\n\r\n    const resetFieldProps = (field: string, linkageConfig: ILinkageConfig[]) => {\r\n        const optionInlinkAge = findOptionInLinkAge(field, linkageConfig)\r\n        optionInlinkAge.forEach(item => {\r\n            props.form?.setFieldsValue({ [item.effect]: undefined })\r\n            setValueInConfig(item.effect, { options: item.option })\r\n            setValueInConfigGroup(item.effect, { options: item.option })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.formChangeRes && props.linkageConfig) {\r\n            const { currentChange } = props.formChangeRes\r\n            resetFieldProps(Object.keys(currentChange)[0], props.linkageConfig)\r\n        }\r\n    }, [props.formChangeRes])\r\n\r\n    // 表单联动初始化\r\n    useEffect(() => {\r\n        setCurrentConfig(props.config)\r\n        setCurrentConfigGroup(props.configGroup)\r\n        const formValues = props.form?.getFieldsValue() || {}\r\n        Object.entries(formValues).forEach(([key, value]) => {\r\n            if (value !== undefined) {\r\n                resetFieldProps(key, props.linkageConfig || [])\r\n            }\r\n        })\r\n    }, [props.configGroup, props.config])\r\n\r\n    const next = () => {\r\n        setCurrent(current + 1);\r\n    };\r\n\r\n    const prev = () => {\r\n        setCurrent(current - 1);\r\n    };\r\n\r\n    const renderFileUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\r\n        return <Form.Item\r\n            key={`dynamicForm_${config.name}`}\r\n            label={config.label}\r\n            name={config.name}\r\n            rules={config.rules}\r\n            initialValue={config.defaultValue}\r\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\r\n            {...itemProps}\r\n        >\r\n            <FileUploadPlus\r\n                filetype={config.data.type}\r\n                format={config.data.format}\r\n                maxCount={config.data.maxCount || 1}\r\n            />\r\n        </Form.Item>\r\n    }\r\n\r\n    const renderInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\r\n        // const rules: Rule[] = [\r\n        //     { required: config.required, message: `请输入${config.label}` },\r\n        //     config.rule ? { pattern: new RegExp(`/^${config.rule}$/`), message: '请按正确的规则输入' } : undefined,\r\n        // ].filter(item => !!item) as Rule[]\r\n\r\n        let extraContent: any = null\r\n\r\n        return <Form.Item\r\n            key={`dynamicForm_${config.name}`}\r\n            label={config.label}\r\n            name={config.name}\r\n            rules={config.rules}\r\n            initialValue={config.defaultValue}\r\n            extra={<>\r\n                {config.data.tips ? <Tooltip\r\n                    className=\"mr8\"\r\n                    placement=\"bottom\"\r\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\r\n                >\r\n                    <div className=\"cp d-il\">\r\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\r\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\r\n                    </div>\r\n                </Tooltip> : null}\r\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\r\n            </>}\r\n            {...itemProps}\r\n        >\r\n            <Input disabled={config.disable} placeholder={config.placeHolder || `${t('请选择')}${config.label}`} />\r\n        </Form.Item>\r\n    }\r\n\r\n    const renderMatchInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\r\n\r\n        return <Form.Item key={`dynamicForm_${config.name}_noStyle`} noStyle shouldUpdate={(pre, next) => {\r\n            // todo:更新有点问题\r\n            // return pre[config.name] != pre[config.name]\r\n            return JSON.stringify(pre) != JSON.stringify(next)\r\n        }}>\r\n            {\r\n                ({ getFieldValue, setFieldsValue }) => {\r\n                    const templateText = `${config.defaultValue}`\r\n                    const matchList = templateText.match(/\\$\\{\\w*}/gi) || []\r\n                    let value = templateText\r\n                    matchList.forEach(item => {\r\n                        const itemKey = item.replace(/^\\$\\{/, '').replace(/\\}$/, '')\r\n                        const itemValue = getFieldValue(itemKey)\r\n                        if (itemValue !== undefined) {\r\n                            value = value.replace(item, itemValue)\r\n                        }\r\n                    })\r\n\r\n                    if (getFieldValue(config.name) !== value) {\r\n                        setFieldsValue({\r\n                            [config.name]: value\r\n                        })\r\n                    }\r\n\r\n                    return <Form.Item\r\n                        key={`dynamicForm_${config.name}`}\r\n                        label={config.label}\r\n                        name={config.name}\r\n                        rules={config.rules}\r\n                        extra={<>\r\n                            {config.data.tips ? <Tooltip\r\n                                className=\"mr8\"\r\n                                placement=\"bottom\"\r\n                                title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\r\n                            >\r\n                                <div className=\"cp d-il\">\r\n                                    <QuestionCircleOutlined style={{ color: '#1672fa' }} />\r\n                                    <span className=\"pl4 c-theme\">{t('详情')}</span>\r\n                                </div>\r\n                            </Tooltip> : null}\r\n                            {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\r\n                        </>}\r\n                        {...itemProps}\r\n                    >\r\n                        <Input disabled={true} />\r\n                    </Form.Item>\r\n                }\r\n            }\r\n        </Form.Item>\r\n    }\r\n\r\n    const renderInputSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\r\n        // const rules = [\r\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\r\n        // ]\r\n        const options: string[] = (config.options || []).map(item => item.label as string)\r\n        return <Form.Item\r\n            key={`dynamicForm_${config.name}`}\r\n            label={config.label}\r\n            name={config.name}\r\n            rules={config.rules}\r\n            initialValue={config.defaultValue}\r\n            extra={<>\r\n                {config.data.tips ? <Tooltip\r\n                    className=\"mr8\"\r\n                    placement=\"bottom\"\r\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\r\n                >\r\n                    <div className=\"cp d-il\">\r\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\r\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\r\n                    </div>\r\n                </Tooltip> : null}\r\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\r\n            </>}\r\n            {...itemProps}\r\n        >\r\n            <InputSearch\r\n                onClick={(value) => {\r\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\r\n                }}\r\n                isOpenSearchMatch={true}\r\n                disabled={config.disable}\r\n                placeholder={`${t('请选择')}${config.label}`}\r\n                options={options} />\r\n        </Form.Item>\r\n    }\r\n\r\n    const renderTextArea = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\r\n        return <Form.Item\r\n            key={`dynamicForm_${config.name}`}\r\n            label={config.label}\r\n            name={config.name}\r\n            rules={config.rules}\r\n            initialValue={config.defaultValue}\r\n            extra={<>\r\n                {config.data.tips ? <Tooltip\r\n                    className=\"mr8\"\r\n                    placement=\"bottom\"\r\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\r\n                >\r\n                    <div className=\"cp d-il\">\r\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\r\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\r\n                    </div>\r\n                </Tooltip> : null}\r\n                {config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\r\n            </>}\r\n            {...itemProps}\r\n        >\r\n            <Input.TextArea autoSize={{ minRows: 4 }} disabled={config.disable} placeholder={config.placeHolder || `${t('请选择')}${config.label}`} />\r\n        </Form.Item>\r\n    }\r\n    const renderSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\r\n        // const rules = [\r\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\r\n        // ]\r\n        const options: LabeledValue[] = config.options || []\r\n        return <Form.Item\r\n            key={`dynamicForm_${config.name}`}\r\n            label={config.label}\r\n            name={config.name}\r\n            rules={config.rules}\r\n            initialValue={config.defaultValue}\r\n            extra={<>\r\n                {config.data.tips ? <Tooltip\r\n                    className=\"mr8\"\r\n                    placement=\"bottom\"\r\n                    title={<span dangerouslySetInnerHTML={{ __html: config.data.tips }}></span>}\r\n                >\r\n                    <div className=\"cp d-il\">\r\n                        <QuestionCircleOutlined style={{ color: '#1672fa' }} />\r\n                        <span className=\"pl4 c-theme\">{t('详情')}</span>\r\n                    </div>\r\n                </Tooltip> : null}\r\n                {config.description ? <span className=\"pr4\" dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\r\n                {\r\n                    config.data.isRefresh ? <div className=\"cp d-il\" onClick={() => {\r\n                        props.onRetryInfoChange && props.onRetryInfoChange()\r\n                    }}>\r\n                        <SyncOutlined style={{ color: '#1672fa' }} />\r\n                        <span className=\"pl4 c-theme\">{t('刷新列表')}</span>\r\n                    </div> : null\r\n                }\r\n            </>}\r\n            {...itemProps}\r\n        >\r\n            <Select\r\n                style={{ width: '100%' }}\r\n                mode={config.multiple ? 'multiple' : undefined}\r\n                onChange={(value) => {\r\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\r\n                }}\r\n                showSearch\r\n                disabled={config.disable}\r\n                optionFilterProp=\"label\"\r\n                placeholder={config.placeHolder || `${t('请选择')}${config.label}`}\r\n                options={options} />\r\n        </Form.Item>\r\n    }\r\n    const renderRadio = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\r\n        // const rules = [\r\n        //     { required: config.required, message: `${t('请选择')}${config.label}` },\r\n        // ]\r\n        const options: LabeledValue[] = config.options || []\r\n        return <Form.Item\r\n            key={`dynamicForm_${config.name}`}\r\n            label={config.label}\r\n            name={config.name}\r\n            rules={config.rules}\r\n            initialValue={config.defaultValue}\r\n            {...itemProps}\r\n        >\r\n            <Radio.Group options={options} />\r\n        </Form.Item>\r\n    }\r\n    const renderDatePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\r\n        return <Form.Item\r\n            key={`dynamicForm_${config.name}`}\r\n            label={config.label}\r\n            name={config.name}\r\n            rules={[{ required: true, message: t('请选择时间') }]}\r\n            {...itemProps}\r\n        >\r\n            <DatePicker style={{ width: '100%' }} locale={locale} showTime={!!config.data.showTime} disabledDate={(current) => {\r\n                return current && current > moment().endOf('day');\r\n            }} />\r\n        </Form.Item>\r\n    }\r\n    const renderRangePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\r\n        return <Form.Item\r\n            key={`dynamicForm_${config.name}`}\r\n            label={config.label}\r\n            name={config.name}\r\n            rules={[{ required: true, message: t('请选择时间范围') }]}\r\n            {...itemProps}\r\n        >\r\n            <DatePicker style={{ width: '100%' }} locale={locale} showTime={!!config.data.showTime} disabledDate={(current) => {\r\n                return current && current > moment().endOf('day');\r\n            }} />\r\n        </Form.Item>\r\n    }\r\n\r\n    const dispatchRenderFormItem = (item: IDynamicFormConfigItem, itemProps: Record<string, any> = {}): JSX.Element | null => {\r\n        switch (item.type) {\r\n            case 'input':\r\n                return renderInput(item, itemProps)\r\n            case 'match-input':\r\n                return renderInput(item, itemProps)\r\n            // return renderMatchInput(item, itemProps)\r\n            case 'input-select':\r\n                return renderInputSelect(item, itemProps)\r\n            case 'textArea':\r\n                return renderTextArea(item, itemProps)\r\n            case 'select':\r\n                return renderSelect(item, itemProps)\r\n            case 'datePicker':\r\n                return renderDatePicker(item, itemProps)\r\n            case 'rangePicker':\r\n                return renderRangePicker(item, itemProps)\r\n            case 'radio':\r\n                return renderRadio(item, itemProps)\r\n            case 'fileUpload':\r\n                return renderFileUpload(item, itemProps)\r\n            default:\r\n                return null\r\n        }\r\n    }\r\n\r\n    const renderFormItem = (config: IDynamicFormConfigItem[]): Array<any | null> => {\r\n        return (config || []).map(item => {\r\n            if (item.list && item.list.length) {\r\n                const formList = <Form.List key={`dynamicForm_${item.name}`} name={item.name}>\r\n                    {(fields, { add, remove }) => (\r\n                        <>\r\n                            {fields.map(({ key, name, ...restField }) => (\r\n                                // <Space key={key} style={{ display: 'flex', marginBottom: 8 }}\r\n                                //     align='baseline'\r\n                                // >\r\n                                //     {\r\n                                //         item.list && item.list.map(listItem => {\r\n                                //             return dispatchRenderFormItem(listItem, {\r\n                                //                 ...restField,\r\n                                //                 name: [name, listItem.name],\r\n                                //                 // style: { flexDirection: 'column' }\r\n                                //             })\r\n                                //         })\r\n                                //     }\r\n                                //     {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\r\n                                //     <Form.Item wrapperCol={{ offset: 5 }}>\r\n                                //         <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />}>\r\n                                //             删除该项\r\n                                //         </Button>\r\n                                //     </Form.Item>\r\n                                // </Space>\r\n                                <div key={key} className=\"bor b-side pt8 plr16 mb8 d-f\" style={{ alignItems: 'start', minWidth: 1600 }}>\r\n                                    {\r\n                                        item.list && item.list.map(listItem => {\r\n                                            return dispatchRenderFormItem(listItem, {\r\n                                                ...restField,\r\n                                                name: [name, listItem.name],\r\n                                                labelAlign: 'left',\r\n                                                labelCol: 24,\r\n                                                style: { flexDirection: 'column', flex: 1, marginBottom: 8 },\r\n                                            })\r\n                                        })\r\n                                    }\r\n                                    {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\r\n                                    <Form.Item >\r\n                                        <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />} style={{ width: 120 }}>\r\n                                            {t('删除该项')}\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </div>\r\n                            ))}\r\n                            <Form.Item noStyle className=\"w100\" label=\"\">\r\n                                <Button type=\"dashed\" className=\"w100\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                                    {t('增加一项')}\r\n                                </Button>\r\n                            </Form.Item>\r\n                        </>\r\n                    )}\r\n                </Form.List>\r\n                return formList\r\n            } else {\r\n                return <div style={{ width: 680 }}>\r\n                    {dispatchRenderFormItem(item)}\r\n                </div>\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form.Item\r\n                key={`dynamicForm_id`}\r\n                name={props.primaryKey || 'id'}\r\n                noStyle\r\n                hidden\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            {\r\n                currentConfigGroup && currentConfigGroup.length ? <>\r\n                    <Steps current={current}>\r\n                        {\r\n                            (currentConfigGroup || []).map((item, index) => {\r\n                                return <Steps.Step key={index} title={item.group} />\r\n                            })\r\n                        }\r\n                    </Steps>\r\n                    <div className=\"pt32\">\r\n                        {\r\n                            (currentConfigGroup || []).map((item, index) => {\r\n                                return <div key={index} className={[current === index ? 'p-r z9' : 'p-a z-99 v-h l-10000'].join(' ')}>\r\n                                    {renderFormItem(item.config)}\r\n                                </div>\r\n                            })\r\n                        }\r\n                    </div>\r\n                    <div className=\"ta-c pt32\">\r\n                        {current > 0 && (\r\n                            <Button onClick={() => prev()}>\r\n                                {t('上一步')}\r\n                            </Button>\r\n                        )}\r\n                        {current < (currentConfigGroup || []).length - 1 && (\r\n                            <Button type=\"primary\" className=\"ml16\" onClick={() => {\r\n                                if (props.form) {\r\n                                    const currentConfigGroupNameList = currentConfigGroup[current].config.map(item => item.name)\r\n                                    props.form.validateFields(currentConfigGroupNameList).then(() => {\r\n                                        next()\r\n                                    }).catch(err => {\r\n                                        console.log(err)\r\n                                    })\r\n                                } else {\r\n                                    next()\r\n                                }\r\n                            }}>\r\n                                {t('下一步')}\r\n                            </Button>\r\n                        )}\r\n                        <div>\r\n                            {current === (currentConfigGroup || []).length - 1 && (\r\n                                <div className=\"pt8 c-hint-b\">{t('点击确定完成提交')}</div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </> : <div style={{ width: 680 }}>\r\n                    {\r\n                        renderFormItem(currentConfig || [])\r\n                    }\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { ReactText, useEffect, useRef, useState } from 'react';\r\nimport { Button, Col, Input, DatePicker, TablePaginationConfig, Row, message, Space, Menu, Dropdown, Modal, Spin, Form, Tag, Popover, Tooltip, Select, FormInstance, Upload, UploadProps, Drawer, notification, Pagination, Switch } from 'antd';\r\nimport { Content } from 'antd/lib/layout/layout';\r\nimport TitleHeader from '../components/TitleHeader/TitleHeader';\r\nimport TableBox from '../components/TableBox/TableBox';\r\nimport moment from \"moment\";\r\nimport { CopyOutlined, DownOutlined, ExclamationCircleOutlined, ExportOutlined, PlusOutlined, QuestionCircleOutlined, RollbackOutlined, UploadOutlined } from '@ant-design/icons'\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { getParam, getTableScroll } from '../util';\r\nimport ModalForm from '../components/ModalForm/ModalForm';\r\nimport cookies from 'js-cookie';\r\nimport { IADUGTemplateActionItem, IAppMenuItem } from '../api/interface/kubeflowInterface';\r\nimport { getADUGTemplateList, getADUGTemplateApiInfo, actionADUGTemplateDelete, getADUGTemplateDetail, actionADUGTemplateAdd, actionADUGTemplateUpdate, actionADUGTemplateSingle, actionADUGTemplateMuliple, actionADUGTemplateRetryInfo, actionADUGTemplateFavorite, actionADUGTemplateCancelFavorite, actionADUGTemplateChartOption } from '../api/kubeflowApi';\r\nimport { ColumnsType } from 'antd/lib/table';\r\nimport MixSearch, { IMixSearchParamItem } from '../components/MixSearch/MixSearch';\r\nimport DynamicForm, { calculateId, IDynamicFormConfigItem, IDynamicFormGroupConfigItem, ILinkageConfig } from '../components/DynamicForm/DynamicForm';\r\nimport ChartOptionTempalte from './ChartOptionTempalte';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface fatchDataParams {\r\n    pageConf: TablePaginationConfig\r\n    params: any[]\r\n    paramsMap: Record<string, any>\r\n    sorter?: ISorterParam\r\n    only_favorite?: boolean\r\n}\r\n\r\ninterface ISorterParam {\r\n    order_column: string\r\n    order_direction: 'desc' | 'asc'\r\n}\r\n\r\nexport default function TaskListManager(props?: IAppMenuItem) {\r\n    const PAGE_SIZE = 20;\r\n    const navigate = useNavigate();\r\n    const location = useLocation()\r\n    const [dataList, setDataList] = useState<any[]>([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [loadingAdd, setLoadingAdd] = useState(false)\r\n    const [visableAdd, setVisableAdd] = useState((getParam('isVisableAdd') === 'true') || false)\r\n    const [loadingUpdate, setLoadingUpdate] = useState(false)\r\n    const [visableUpdate, setVisableUpdate] = useState(false)\r\n    const [loadingDetail, setLoadingDetail] = useState(false)\r\n    const [visableDetail, setVisableDetail] = useState(false)\r\n    const [selectedRowKeys, setSelectedRowKeys] = useState<ReactText[]>([])\r\n    const pageInfoInit: TablePaginationConfig = {\r\n        current: 1,\r\n        pageSize: PAGE_SIZE,\r\n        total: 0,\r\n        showSizeChanger: true,\r\n        showQuickJumper: true,\r\n        pageSizeOptions: [20, 50, 100, 500],\r\n        showTotal: (total) => `${t('共')}${total}${t('条')}`,\r\n    };\r\n    const [pageInfo, setPageInfo] = useState<TablePaginationConfig>(pageInfoInit);\r\n    const [currentColumns, setCurrentColumns] = useState<ColumnsType<any>>([])\r\n    const [filterParams, setFilterParams] = useState<IMixSearchParamItem[]>([])\r\n    const [filterValues, _setFilterValues] = useState<Array<{ key: ReactText | undefined, value: ReactText | undefined }>>([])\r\n    const filterValuesRef = useRef(filterValues);\r\n    const setFilterValues = (data: Array<{ key: ReactText | undefined, value: ReactText | undefined }>): void => {\r\n        filterValuesRef.current = data;\r\n        _setFilterValues(data);\r\n    };\r\n    const [dynamicFormConfigAdd, setDynamicFormConfigAdd] = useState<IDynamicFormConfigItem[]>([])\r\n    const [dynamicFormConfigUpdate, setDynamicFormConfigUpdate] = useState<IDynamicFormConfigItem[]>([])\r\n    const [dynamicFormGroupConfigAdd, setDynamicFormGroupConfigAdd] = useState<IDynamicFormGroupConfigItem[]>([])\r\n    const [dynamicFormGroupConfigUpdate, setDynamicFormGroupConfigUpdate] = useState<IDynamicFormGroupConfigItem[]>([])\r\n\r\n    let customFormData: Record<string, string> = {}\r\n    try {\r\n        customFormData = JSON.parse(getParam('formData') || \"{}\")\r\n    } catch (err) { }\r\n    const [dynamicFormDataAdd, setDynamicFormDataAdd] = useState(customFormData)\r\n    const [updateColumnsMap, setUpdateColumnsMap] = useState<Record<string, any>>({})\r\n    const [labelMap, _setLabelMap] = useState<Record<string, string>>({})\r\n    const labelMapRef = useRef(labelMap);\r\n    const setLabelMap = (data: Record<string, string>): void => {\r\n        labelMapRef.current = data;\r\n        _setLabelMap(data);\r\n    };\r\n    const [dataDetail, setDataDetail] = useState<Array<{ label: string, value: any, key: string }>>([])\r\n    const [tableWidth, setTableWidth] = useState(1000)\r\n    const [permissions, setPermissions] = useState<string[]>([])\r\n    // const [tips, setTips] = useState<Array<{ label: string, value: any }>>([])\r\n    const [filterParamsMap, setFilterParamsMap] = useState<Record<string, any>>({})\r\n    const [helpUrl, setHelpUrl] = useState<string | null>()\r\n\r\n    const [baseUrl, _setBaseUrl] = useState<string>()\r\n    const baseUrlRef = useRef(baseUrl);\r\n    const setBaseUrl = (data: string): void => {\r\n        baseUrlRef.current = data;\r\n        _setBaseUrl(data);\r\n    };\r\n    const [isImportData, setIsImportData] = useState(false)\r\n    const [isDownLoadData, setIsDownLoadData] = useState(false)\r\n    const [columnRelateFormat, setColumnRelateFormat] = useState<ILinkageConfig[]>([])\r\n    const [multipleAction, setMultipleAction] = useState<IADUGTemplateActionItem[]>([])\r\n    const [sorterParam, setSorterParam] = useState<{\r\n        order_column: string\r\n        order_direction: 'desc' | 'asc'\r\n    }>()\r\n    const [primaryKey, setPrimaryKey] = useState('')\r\n    const [labelTitle, setLabelTitle] = useState('')\r\n    const [list_ui_type, setList_ui_type] = useState<'card' | 'table'>()\r\n    const [list_ui_args, setList_ui_args] = useState<{\r\n        card_width: string\r\n        card_height: string\r\n    }>()\r\n    const [opsLink, setOpsLink] = useState<Array<{\r\n        text: string\r\n        url: string\r\n    }>>([])\r\n    const [listColumns, setListColumns] = useState<string[]>([])\r\n    const [isAllDataList, _setIsAllDataList] = useState(true)\r\n    const isAllDataListRef = useRef(isAllDataList);\r\n    const setIsAllDataList = (data: boolean): void => {\r\n        isAllDataListRef.current = data;\r\n        _setIsAllDataList(data);\r\n    };\r\n    const [isShowCollect, _setIsShowCollect] = useState(false)\r\n    const isShowCollectRef = useRef(isShowCollect);\r\n    const setIsShowCollect = (data: boolean): void => {\r\n        isShowCollectRef.current = data;\r\n        _setIsShowCollect(data);\r\n    };\r\n    const [isEchartShow, setIsEchartShow] = useState(false)\r\n    const [pageSize, setPageSize] = useState(PAGE_SIZE)\r\n    const [listTitle, setListTitle] = useState<string>()\r\n\r\n    const { t, i18n } = useTranslation();\r\n\r\n    const [scrollY, setScrollY] = useState(\"\")\r\n\r\n    const fetchDataParams = {\r\n        pageConf: pageInfoInit,\r\n        params: [],\r\n        paramsMap: filterParamsMap,\r\n        sorter: undefined\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n    }, [pageSize])\r\n\r\n    useEffect(() => {\r\n        setScrollY(getTableScroll())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props && props.disable) {\r\n            navigate('/404')\r\n        }\r\n    }, [])\r\n\r\n    const createDyFormConfig = (data: Record<string, any>[], label_columns: Record<string, any>, description_columns: Record<string, any>): IDynamicFormConfigItem[] => {\r\n        return data.map((item, index) => {\r\n            let type = item['ui-type'] || 'input'\r\n            if (type === 'select2') {\r\n                type = 'select'\r\n            }\r\n            if (type === 'file') {\r\n                type = 'fileUpload'\r\n            }\r\n            const label = item.label || label_columns[item.name]\r\n\r\n            // 校验规则\r\n            const rules = (item.validators || []).map((item: any) => {\r\n                if (type === 'select') {\r\n                    return item.type === 'DataRequired' ? { required: true, message: `${t('请选择')} ${label}` } : undefined\r\n                }\r\n\r\n                switch (item.type) {\r\n                    case 'DataRequired':\r\n                        return { required: true, message: `${t('请输入')} ${label}` }\r\n                    case 'Regexp':\r\n                        return { pattern: new RegExp(`${item.regex}`), message: `${t('请按正确的规则输入')}` }\r\n                    case 'Length':\r\n                        return { min: item.min || 0, max: item.max, message: `${t('请输入正确的长度')}` }\r\n                    default:\r\n                        return undefined\r\n                }\r\n            }).filter((item: any) => !!item)\r\n\r\n            const list = createDyFormConfig((item.info || []), label_columns, description_columns)\r\n\r\n            const res: IDynamicFormConfigItem = {\r\n                label,\r\n                type,\r\n                rules,\r\n                list,\r\n                name: item.name,\r\n                disable: item.disable,\r\n                description: item.description || description_columns[item.name] || undefined,\r\n                required: item.required,\r\n                defaultValue: item.default === '' ? undefined : item.default,\r\n                multiple: item['ui-type'] && item['ui-type'] === 'select2',\r\n                options: (item.values || []).map((item: any) => ({ label: item.value, value: item.id })),\r\n                data: { ...item }\r\n            }\r\n            return res\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const targetId = getParam('targetId')\r\n        const url = targetId ? `/dimension_remote_table_modelview/${targetId}/api/` : props?.url\r\n        setLoadingAdd(true)\r\n\r\n        getADUGTemplateApiInfo(url).then(res => {\r\n            const {\r\n                list_columns,\r\n                label_columns,\r\n                filters,\r\n                add_columns,\r\n                edit_columns,\r\n                permissions,\r\n                description_columns,\r\n                add_fieldsets,\r\n                edit_fieldsets,\r\n                help_url,\r\n                order_columns,\r\n                action,\r\n                route_base,\r\n                column_related,\r\n                primary_key,\r\n                label_title,\r\n                cols_width,\r\n                import_data,\r\n                download_data,\r\n                list_ui_type,\r\n                list_ui_args,\r\n                ops_link,\r\n                enable_favorite,\r\n                echart,\r\n                page_size,\r\n                list_title\r\n            } = res.data\r\n            const actionwidth = 80 || [props?.related, permissions.includes('can_show'), permissions.includes('can_edit'), permissions.includes('can_delete')].filter(item => !!item).length * 60\r\n            const hasAction = props?.related || permissions.includes('can_show') || permissions.includes('can_edit') || permissions.includes('can_delete')\r\n            const cacheColumns = localStorage.getItem(`tablebox_${location.pathname}`)\r\n            const cacheColumnsWidthMap = (JSON.parse(cacheColumns || '[]')).reduce((pre: any, next: any) => ({ ...pre, [next.dataIndex]: next.width }), {});\r\n\r\n            const columnRelatedFormat: ILinkageConfig[] = Object.entries(column_related || {})\r\n                .reduce((pre: any[], [key, value]) => ([...pre, {\r\n                    dep: value.src_columns,\r\n                    effect: value.des_columns.join(''),\r\n                    effectOption: value.related.reduce((ePre: any, eNext) => ({ ...ePre, [calculateId(eNext.src_value)]: eNext.des_value.map(item => ({ label: item, value: item })) }), {})\r\n                }]), [])\r\n\r\n            const listColumns = list_columns.map(column => {\r\n                return {\r\n                    title: label_columns[column] || column,\r\n                    dataIndex: column,\r\n                    key: column,\r\n                    sorter: order_columns.includes(column) ? (a: any, b: any) => a[column] - b[column] : undefined,\r\n                    render: (text: any, record: any) => {\r\n                        if (text === undefined || text === '') {\r\n                            return '-'\r\n                        }\r\n                        if (cols_width[column] && cols_width[column].type?.indexOf('ellip') !== -1) {\r\n                            return <Tooltip title={<span className=\"tips-content\" dangerouslySetInnerHTML={{ __html: text }}></span>} placement=\"topLeft\">\r\n                                <div className={cols_width[column].type} dangerouslySetInnerHTML={{ __html: text }}>\r\n                                </div>\r\n                            </Tooltip>\r\n                        }\r\n                        if (Object.prototype.toString.call(text) === '[object Object]') {\r\n                            const tarRes = Object.entries(text).reduce((pre: any, [label, value]) => [...pre, { label, value }], [])\r\n                            if (!tarRes.length) {\r\n                                return '-'\r\n                            }\r\n                            return <div style={{ overflow: 'auto', maxHeight: 100 }}>\r\n                                {\r\n                                    tarRes.map((item: any, index: number) => {\r\n                                        return <div key={`table_itemvalue_${index}`}>{label_columns[item.label] || item.label}:{item.value}</div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        }\r\n                        return <div style={{ overflow: 'auto', maxHeight: 100 }} dangerouslySetInnerHTML={{ __html: text }}></div>\r\n                    },\r\n                    width: cacheColumnsWidthMap[column] || (cols_width[column] && cols_width[column].width) || 100\r\n                }\r\n            })\r\n\r\n            const actionList = Object.entries(action || {}).reduce((pre: any, [name, value]) => ([...pre, { ...value }]), [])\r\n            const multipleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.multiple)\r\n            const singleAction: IADUGTemplateActionItem[] = actionList.filter((item: any) => !!item.single)\r\n\r\n            const tableAction: any = {\r\n                title: t('操作'),\r\n                width: actionwidth,\r\n                dataIndex: 'handle',\r\n                key: 'handle',\r\n                align: 'right',\r\n                fixed: 'right',\r\n                render: (text: any, record: any) => {\r\n                    return (\r\n                        <Space size=\"middle\">\r\n                            {\r\n                                hasAction ? <Dropdown overlay={<Menu>\r\n                                    {\r\n                                        isShowCollectRef.current && isAllDataListRef.current ? <Menu.Item><div className=\"link\" onClick={() => {\r\n                                            Modal.confirm({\r\n                                                title: t('收藏'),\r\n                                                icon: <ExclamationCircleOutlined />,\r\n                                                content: `${t('确定收藏')}?`,\r\n                                                okText: t('确认收藏'),\r\n                                                cancelText: t('取消'),\r\n                                                onOk() {\r\n                                                    return new Promise((resolve, reject) => {\r\n                                                        actionADUGTemplateFavorite(`${route_base}favorite/${record[primary_key]}`)\r\n                                                            .then((res) => {\r\n                                                                resolve('');\r\n                                                            })\r\n                                                            .catch((err) => {\r\n                                                                reject();\r\n                                                            });\r\n                                                    })\r\n                                                        .then((res) => {\r\n                                                            message.success(t('收藏成功'));\r\n                                                            fetchData({\r\n                                                                ...fetchDataParams,\r\n                                                                pageConf: pageInfo,\r\n                                                                params: filterValuesRef.current,\r\n                                                                paramsMap: filters\r\n                                                            });\r\n                                                        })\r\n                                                        .catch(() => {\r\n                                                            message.error(t('收藏失败'));\r\n                                                        });\r\n                                                },\r\n                                                onCancel() { },\r\n                                            });\r\n                                        }}>{t('收藏')}</div></Menu.Item> : null\r\n                                    }\r\n                                    {\r\n                                        isShowCollectRef.current && !isAllDataListRef.current ? <Menu.Item><div className=\"link\" onClick={() => {\r\n                                            Modal.confirm({\r\n                                                title: t('取消收藏'),\r\n                                                icon: <ExclamationCircleOutlined />,\r\n                                                content: `${t('确定取消收藏')}?`,\r\n                                                okText: t('确认取消收藏'),\r\n                                                cancelText: t('取消'),\r\n                                                onOk() {\r\n                                                    return new Promise((resolve, reject) => {\r\n                                                        actionADUGTemplateCancelFavorite(`${route_base}favorite/${record[primary_key]}`)\r\n                                                            .then((res) => {\r\n                                                                resolve('');\r\n                                                            })\r\n                                                            .catch((err) => {\r\n                                                                reject();\r\n                                                            });\r\n                                                    })\r\n                                                        .then((res) => {\r\n                                                            message.success(t('操作成功'));\r\n                                                            fetchData({\r\n                                                                ...fetchDataParams,\r\n                                                                pageConf: pageInfo,\r\n                                                                params: filterValuesRef.current,\r\n                                                                paramsMap: filters\r\n                                                            });\r\n                                                        })\r\n                                                        .catch(() => {\r\n                                                            message.error(t('操作失败'));\r\n                                                        });\r\n                                                },\r\n                                                onCancel() { },\r\n                                            });\r\n                                        }}>{t('取消收藏')}</div></Menu.Item> : null\r\n                                    }\r\n                                    {\r\n                                        permissions.includes('can_show') ? <Menu.Item><div className=\"link\" onClick={() => {\r\n                                            setVisableDetail(true)\r\n                                            fetchDataDetail(record[primary_key])\r\n                                        }}>\r\n                                            {t('详情')}\r\n                                        </div></Menu.Item> : null\r\n                                    }\r\n                                    {\r\n                                        permissions.includes('can_edit') ? <Menu.Item><div className=\"link\" onClick={() => {\r\n                                            setVisableUpdate(true)\r\n                                            getADUGTemplateApiInfo(route_base, record[primary_key]).then(res => {\r\n                                                const { edit_columns, label_columns, description_columns } = res.data\r\n                                                const formConfigUpdate: IDynamicFormConfigItem[] = createDyFormConfig(edit_columns, label_columns, description_columns)\r\n                                                const formGroupConfigUpdate: IDynamicFormGroupConfigItem[] = edit_fieldsets.map(group => {\r\n                                                    const currentData = group.fields.map(field => updateColumnsMap[field]).filter(item => !!item)\r\n                                                    return {\r\n                                                        group: group.group,\r\n                                                        expanded: group.expanded,\r\n                                                        config: createDyFormConfig(currentData, label_columns, description_columns)\r\n                                                    }\r\n                                                })\r\n\r\n                                                setDynamicFormConfigUpdate(formConfigUpdate)\r\n                                                setDynamicFormGroupConfigUpdate(formGroupConfigUpdate)\r\n\r\n                                                fetchDataDetail(record[primary_key])\r\n                                            }).catch(() => {\r\n                                                message.warn(t('用户没有修改权限'))\r\n                                            })\r\n                                        }}>\r\n                                            {t('修改')}\r\n                                        </div></Menu.Item> : null\r\n                                    }\r\n                                    {\r\n                                        permissions.includes('can_delete') ? <Menu.Item><div className=\"c-fail cp\" onClick={() => {\r\n                                            Modal.confirm({\r\n                                                title: t('删除'),\r\n                                                icon: <ExclamationCircleOutlined />,\r\n                                                content: `${t('确定删除')}?`,\r\n                                                okText: t('确认删除'),\r\n                                                cancelText: t('取消'),\r\n                                                okButtonProps: { danger: true },\r\n                                                onOk() {\r\n                                                    return new Promise((resolve, reject) => {\r\n                                                        actionADUGTemplateDelete(`${route_base}${record[primary_key]}`)\r\n                                                            .then((res) => {\r\n                                                                resolve('');\r\n                                                            })\r\n                                                            .catch((err) => {\r\n                                                                reject();\r\n                                                            });\r\n                                                    })\r\n                                                        .then((res) => {\r\n                                                            message.success(t('删除成功'));\r\n                                                            fetchData({\r\n                                                                ...fetchDataParams,\r\n                                                                pageConf: pageInfo,\r\n                                                                params: filterValuesRef.current,\r\n                                                                paramsMap: filters\r\n                                                            });\r\n                                                        })\r\n                                                        .catch(() => {\r\n                                                            message.error(t('删除失败'));\r\n                                                        });\r\n                                                },\r\n                                                onCancel() { },\r\n                                            });\r\n                                        }}>\r\n                                            {t('删除')}\r\n                                        </div></Menu.Item> : null\r\n                                    }\r\n                                    {\r\n                                        props?.related?.map((item, index) => {\r\n                                            return <Menu.Item key={`moreAction_${index}`}>\r\n                                                <div className=\"link\" onClick={() => {\r\n                                                    navigate(`${location.pathname}/${item.name}?id=${record[primary_key]}`)\r\n                                                }}>\r\n                                                    {item.title}\r\n                                                </div>\r\n                                            </Menu.Item>\r\n                                        })\r\n                                    }\r\n                                    {\r\n                                        !!singleAction.length && singleAction.map((action, index) => {\r\n                                            return <Menu.Item key={`table_action_${index}`}><div className=\"link\" onClick={() => {\r\n                                                Modal.confirm({\r\n                                                    title: action.confirmation,\r\n                                                    icon: <ExclamationCircleOutlined />,\r\n                                                    content: '',\r\n                                                    okText: t('确认'),\r\n                                                    cancelText: t('取消'),\r\n                                                    onOk() {\r\n                                                        return new Promise((resolve, reject) => {\r\n                                                            actionADUGTemplateSingle(`${route_base}action/${action.name}/${record[primary_key]}`)\r\n                                                                .then((res) => {\r\n                                                                    resolve(res);\r\n                                                                })\r\n                                                                .catch((err) => {\r\n                                                                    reject(err);\r\n                                                                });\r\n                                                        })\r\n                                                            .then((res: any) => {\r\n                                                                message.success(t('操作成功'));\r\n\r\n                                                                if (res.data.result.link) {\r\n                                                                    window.open(res.data.result.link, 'bank')\r\n                                                                }\r\n                                                                fetchData({\r\n                                                                    ...fetchDataParams,\r\n                                                                    pageConf: pageInfo,\r\n                                                                    params: filterValuesRef.current,\r\n                                                                    paramsMap: filters\r\n                                                                });\r\n                                                            })\r\n                                                            .catch(() => {\r\n                                                                message.error(t('操作失败'));\r\n                                                            });\r\n                                                    },\r\n                                                    onCancel() { },\r\n                                                });\r\n                                            }}>\r\n                                                {t(`${action.text}`)}\r\n                                            </div></Menu.Item>\r\n                                        })\r\n                                    }\r\n                                </Menu>}>\r\n                                    <div className=\"link\">{t('更多')}<DownOutlined /></div>\r\n                                </Dropdown> : null\r\n                            }\r\n                        </Space>\r\n                    );\r\n                },\r\n            }\r\n            const tarColumns: React.SetStateAction<ColumnsType<any>> = [...listColumns]\r\n            if (hasAction) {\r\n                tarColumns.push(tableAction)\r\n            }\r\n\r\n            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\r\n            if (customFormData && Object.keys(customFormData).length) {\r\n                const reTryInfoQuene = (Object.keys(customFormData) || []).filter(key => customFormData[key] && addColumnsMap[key] && addColumnsMap[key].retry_info)\r\n                let reTryInfoFlag = reTryInfoQuene.length\r\n\r\n                const handleReTryInfo = (tar: string) => {\r\n                    reTryInfoFlag = reTryInfoFlag - 1;\r\n\r\n                    actionADUGTemplateRetryInfo(`${route_base}_info`, { exist_add_args: tar }).then(res => {\r\n                        const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\r\n                        const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\r\n                        const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\r\n                        const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\r\n                            const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\r\n                            return {\r\n                                group: group.group,\r\n                                expanded: group.expanded,\r\n                                config: createDyFormConfig(currentData, label_columns, description_columns)\r\n                            }\r\n                        })\r\n                        const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\r\n\r\n                        setDynamicFormDataAdd(formReset)\r\n                        setDynamicFormConfigAdd(formConfigAdd)\r\n                        setDynamicFormGroupConfigAdd(formGroupConfigAdd)\r\n\r\n                        if (reTryInfoFlag) {\r\n                            const resTar = JSON.stringify(formReset)\r\n                            handleReTryInfo(resTar)\r\n                        }\r\n                    }).catch(err => {\r\n                        message.error(t('字段切换错误'))\r\n                    }).finally(() => {\r\n                        setLoadingAdd(false)\r\n                    })\r\n                }\r\n\r\n                if (reTryInfoQuene.length) {\r\n                    const formRes = customFormData\r\n                    for (const key in formRes) {\r\n                        if (Object.prototype.hasOwnProperty.call(formRes, key)) {\r\n                            const value = formRes[key];\r\n                            if (value === undefined) {\r\n                                delete formRes[key]\r\n                            }\r\n                        }\r\n                    }\r\n                    const tar = JSON.stringify(formRes)\r\n\r\n                    handleReTryInfo(tar)\r\n                }\r\n            }\r\n\r\n            const updateColumnsMap = edit_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\r\n            edit_columns.forEach((item) => {\r\n                if (item['ui-type'] === 'list') {\r\n                    item.info.forEach((itemInfo: any) => {\r\n                        updateColumnsMap[itemInfo.name] = itemInfo\r\n                    })\r\n                }\r\n            })\r\n            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\r\n            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\r\n                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\r\n                return {\r\n                    group: group.group,\r\n                    expanded: group.expanded,\r\n                    config: createDyFormConfig(currentData, label_columns, description_columns)\r\n                }\r\n            })\r\n\r\n            const tarFilter: IMixSearchParamItem[] = Object.entries(filters)\r\n                .reduce((pre: any, [name, value]) => {\r\n                    return [...pre, {\r\n                        name,\r\n                        type: value['ui-type'] || 'input',\r\n                        title: label_columns[name],\r\n                        oprList: value.filter.map(item => item.operator),\r\n                        defalutValue: value.default === '' ? undefined : value.default,\r\n                        option: value.values ? value.values.map(item => ({ label: item.value, value: item.id })) : undefined\r\n                    }]\r\n                }, [])\r\n\r\n            let currentFilterValues = Object.entries(filters)\r\n                .reduce((pre: any, [key, value]) => {\r\n                    return [...pre, {\r\n                        key,\r\n                        value: value.default\r\n                    }]\r\n                }, []).filter((item: any) => item.value)\r\n\r\n            const localCacheFilter = JSON.parse(localStorage.getItem(`filter_${location.pathname}${location.search}`) || '[]')\r\n            let urlFilter = undefined\r\n            if (getParam('filter')) {\r\n                try {\r\n                    urlFilter = JSON.parse(getParam('filter') || '[]')\r\n                } catch (error) {\r\n                    message.error(t('filter解析异常'))\r\n                }\r\n            }\r\n            const localFilter = urlFilter || localCacheFilter\r\n            if (localFilter && localFilter.length) {\r\n                currentFilterValues = localFilter\r\n            }\r\n\r\n            setListTitle(list_title)\r\n            setPageSize(page_size)\r\n            setIsEchartShow(echart)\r\n            setIsShowCollect(enable_favorite)\r\n            setOpsLink(ops_link)\r\n            setListColumns(list_columns)\r\n            setList_ui_type(list_ui_type)\r\n            setList_ui_args(list_ui_args)\r\n            setIsDownLoadData(download_data)\r\n            setIsImportData(import_data)\r\n            setLabelTitle(label_title)\r\n            setPrimaryKey(primary_key)\r\n            setColumnRelateFormat(columnRelatedFormat)\r\n            setMultipleAction(multipleAction)\r\n            setBaseUrl(route_base)\r\n            setUpdateColumnsMap(updateColumnsMap)\r\n            setFilterParamsMap(filters)\r\n            setCurrentColumns(tarColumns)\r\n            setFilterParams(tarFilter)\r\n            setDynamicFormConfigAdd(formConfigAdd)\r\n            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\r\n\r\n            setLabelMap(label_columns)\r\n            setPermissions(permissions)\r\n            const currentTableWidth = cacheColumns ? tarColumns.reduce((pre: any, next: any) => pre + next.width || 100, 0) + 80 : tarColumns.length * 100 + 80 + actionwidth\r\n            setTableWidth(currentTableWidth)\r\n            setHelpUrl(help_url)\r\n            setFilterValues(currentFilterValues)\r\n\r\n            fetchData({\r\n                pageConf: {\r\n                    ...pageInfoInit,\r\n                    pageSize: page_size\r\n                },\r\n                params: currentFilterValues,\r\n                paramsMap: filters,\r\n                sorter: undefined\r\n            });\r\n\r\n        }).catch(err => {\r\n            console.log(err);\r\n        }).finally(() => {\r\n            setLoading(false)\r\n            setLoadingAdd(false)\r\n        })\r\n    }, []);\r\n\r\n    const formatFilterParams = (params: any[], paramsMap: Record<string, any>) => {\r\n        let formatData = undefined\r\n        const temlateId = getParam('id')\r\n\r\n        formatData = {\r\n            filters: [\r\n                temlateId ? {\r\n                    col: props?.model_name,\r\n                    opr: \"rel_o_m\",\r\n                    value: +temlateId\r\n                } : undefined,\r\n                ...params.filter(param => param.value !== undefined).map((param: any) => {\r\n                    let opr = ''\r\n                    const oprList = ['rel_o_m', 'ct', 'eq']\r\n                    const sourceOprList: string[] = paramsMap[param.key].filter.map((item: any) => item.operator) || []\r\n\r\n                    for (let i = 0; i < oprList.length; i++) {\r\n                        const currentOpr = oprList[i];\r\n                        if (sourceOprList.includes(currentOpr)) {\r\n                            opr = currentOpr\r\n                            break\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        col: param.key,\r\n                        opr: opr,\r\n                        value: param.value\r\n                    }\r\n                })\r\n            ].filter(item => !!item),\r\n        }\r\n        return formatData\r\n    }\r\n\r\n    const fetchData = ({\r\n        pageConf,\r\n        params,\r\n        paramsMap,\r\n        sorter,\r\n        only_favorite\r\n    }: fatchDataParams = {\r\n            pageConf: pageInfoInit,\r\n            params: filterValues,\r\n            paramsMap: filterParamsMap,\r\n            sorter: undefined,\r\n            only_favorite: false\r\n        }) => {\r\n        setLoading(true);\r\n\r\n        const form_data = JSON.stringify({\r\n            ...formatFilterParams(params, paramsMap),\r\n            only_favorite,\r\n            str_related: 1,\r\n            page: (pageConf.current || 1) - 1,\r\n            page_size: pageConf.pageSize || 10,\r\n            ...sorter\r\n        })\r\n\r\n        getADUGTemplateList(baseUrlRef.current, {\r\n            form_data,\r\n        })\r\n            .then((res) => {\r\n                const { count, data } = res.data.result\r\n                setDataList(data);\r\n                setSelectedRowKeys([])\r\n                setPageInfo({ ...pageInfoInit, ...pageConf, total: count });\r\n                setSorterParam(sorter)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n            .finally(() => setLoading(false));\r\n    };\r\n\r\n    const fetchDataDetail = (id: string) => {\r\n        setLoadingDetail(true)\r\n        setDataDetail([])\r\n        getADUGTemplateDetail(`${baseUrlRef.current}${id}`)\r\n            .then(res => {\r\n                const data = res.data.result\r\n                const detail: any[] = []\r\n                const formatValue = (data: any) => {\r\n                    if (Object.prototype.toString.call(data) === '[object Object]') {\r\n                        return data.last_name\r\n                    }\r\n                    return data\r\n                }\r\n                Object.keys(data).forEach(key => {\r\n                    detail.push({\r\n                        label: labelMapRef.current[key] || key,\r\n                        value: formatValue(data[key]),\r\n                        key\r\n                    })\r\n                })\r\n                setDataDetail(detail)\r\n            })\r\n            .catch(err => { })\r\n            .finally(() => { setLoadingDetail(false) })\r\n    }\r\n\r\n    const handleMultiRecord = (action: IADUGTemplateActionItem) => {\r\n        if (selectedRowKeys.length) {\r\n            Modal.confirm({\r\n                title: action.confirmation,\r\n                icon: <ExclamationCircleOutlined />,\r\n                content: '',\r\n                okText: t('确认'),\r\n                cancelText: t('取消'),\r\n                onOk() {\r\n                    return new Promise((resolve, reject) => {\r\n                        actionADUGTemplateMuliple(`${baseUrlRef.current}multi_action/${action.name}`, {\r\n                            ids: selectedRowKeys.map((item: any) => JSON.parse(item || '{}')[primaryKey])\r\n                        })\r\n                            .then((res) => {\r\n                                resolve('');\r\n                            })\r\n                            .catch((err) => {\r\n                                reject();\r\n                            });\r\n                    })\r\n                        .then((res) => {\r\n                            message.success(t('操作成功'));\r\n                            fetchData({\r\n                                ...fetchDataParams,\r\n                                pageConf: pageInfo,\r\n                                params: filterValues,\r\n                                sorter: sorterParam,\r\n                                paramsMap: filterParamsMap\r\n                            });\r\n                        })\r\n                        .catch(() => {\r\n                            message.error(t('操作失败'));\r\n                        });\r\n                },\r\n                onCancel() { },\r\n            });\r\n        } else {\r\n            message.warn(t('请先选择'))\r\n        }\r\n    }\r\n\r\n    const uploadConfig: UploadProps = {\r\n        name: 'csv_file',\r\n        maxCount: 1,\r\n        action: `${baseUrl}upload/`,\r\n        headers: {\r\n            authorization: 'authorization-text',\r\n        },\r\n        beforeUpload: file => {\r\n            const isCSV = file.name.indexOf('.csv') !== -1;\r\n            const isXLS = file.name.indexOf('.xls') !== -1;\r\n            const isJson = file.name.indexOf('.json') !== -1;\r\n            const isXLSX = file.name.indexOf('.xlsx') !== -1;\r\n            if (isCSV || isJson || isXLS || isXLSX) {\r\n                return true\r\n            } else {\r\n                message.error(`文件格式支持CSV/JSON/XLS/XLSX`);\r\n            }\r\n        },\r\n        onChange(info) {\r\n            if (info.file.status === 'done') {\r\n                notification['success']({\r\n                    message: t('导入成功'),\r\n                    description: JSON.stringify(info.file.response),\r\n                });\r\n            } else if (info.file.status === 'error') {\r\n                notification['error']({\r\n                    message: t('导入失败'),\r\n                    description: JSON.stringify(info.file.response),\r\n                });\r\n            }\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className=\"fade-in h100 d-f fd-c\">\r\n            {/* 添加 */}\r\n            <ModalForm\r\n                title={`${t('添加')} ${labelTitle}`}\r\n                // width={1000}\r\n                formData={dynamicFormDataAdd}\r\n                loading={loadingAdd}\r\n                visible={visableAdd}\r\n                onCancel={() => { setVisableAdd(false) }}\r\n                onCreate={(values, form) => {\r\n                    setLoadingAdd(true)\r\n                    for (const key in values) {\r\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\r\n                            const value = values[key];\r\n                            if (Array.isArray(value)) {\r\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\r\n                                    continue\r\n                                }\r\n                                values[key] = values[key].join(',')\r\n                            }\r\n                        }\r\n                    }\r\n                    actionADUGTemplateAdd(baseUrlRef.current, values).then((res: any) => {\r\n                        message.success(`${t('添加')} ${labelTitle} ${t('成功')}`)\r\n                        form.resetFields()\r\n                        setVisableAdd(false)\r\n                        fetchData({\r\n                            ...fetchDataParams,\r\n                            pageConf: pageInfo,\r\n                            params: filterValues,\r\n                            sorter: sorterParam,\r\n                            paramsMap: filterParamsMap\r\n                        });\r\n                    }).catch(err => {\r\n                        message.error(`${t('添加')} ${labelTitle} ${t('失败')}`)\r\n                    }).finally(() => {\r\n                        setLoadingAdd(false)\r\n                    })\r\n                }}\r\n            >\r\n                {\r\n                    (form: FormInstance, formChangeRes: any) => <DynamicForm form={form} onRetryInfoChange={(value) => {\r\n                        setLoadingAdd(true)\r\n\r\n                        const formRes = form.getFieldsValue()\r\n                        for (const key in formRes) {\r\n                            if (Object.prototype.hasOwnProperty.call(formRes, key)) {\r\n                                const value = formRes[key];\r\n                                if (value === undefined) {\r\n                                    delete formRes[key]\r\n                                }\r\n                            }\r\n                        }\r\n                        const tar = JSON.stringify(formRes)\r\n                        form.resetFields()\r\n\r\n                        actionADUGTemplateRetryInfo(`${baseUrlRef.current}_info`, { exist_add_args: tar }).then(res => {\r\n                            const { add_columns, label_columns, description_columns, add_fieldsets } = res.data;\r\n                            const addColumnsMap = add_columns.reduce((pre: any, next: any) => ({ ...pre, [next.name]: next }), {})\r\n                            const formConfigAdd: IDynamicFormConfigItem[] = createDyFormConfig(add_columns, label_columns, description_columns)\r\n                            const formGroupConfigAdd: IDynamicFormGroupConfigItem[] = add_fieldsets.map(group => {\r\n                                const currentData = group.fields.map(field => addColumnsMap[field]).filter(item => !!item)\r\n                                return {\r\n                                    group: group.group,\r\n                                    expanded: group.expanded,\r\n                                    config: createDyFormConfig(currentData, label_columns, description_columns)\r\n                                }\r\n                            })\r\n                            const formReset = add_columns.filter((item) => item.default !== '').map(column => ({ [column.name]: column.default })).reduce((pre, next) => ({ ...pre, ...next }), {})\r\n\r\n                            form.setFieldsValue(formReset)\r\n                            setDynamicFormConfigAdd(formConfigAdd)\r\n                            setDynamicFormGroupConfigAdd(formGroupConfigAdd)\r\n                        }).catch(err => {\r\n                            message.error(t('字段切换错误'))\r\n                        }).finally(() => {\r\n                            setLoadingAdd(false)\r\n                        })\r\n\r\n                    }} formChangeRes={formChangeRes} linkageConfig={columnRelateFormat} config={dynamicFormConfigAdd} configGroup={dynamicFormGroupConfigAdd} />\r\n                }\r\n            </ModalForm>\r\n            {/* 修改 */}\r\n            <ModalForm\r\n                title={`${t('修改')} ${labelTitle}`}\r\n                // width={1500}\r\n                formData={dataDetail.reduce((pre, next) => {\r\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select') {\r\n                        let value = next.value\r\n                        const options = (updateColumnsMap[next.key] || {}).values || []\r\n                        const tarIndex = options.map((item: any) => item.value).indexOf(next.value)\r\n                        if (~tarIndex) {\r\n                            value = options[tarIndex].id\r\n                        }\r\n                        return { ...pre, [next.key]: value }\r\n                    }\r\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'select2') {\r\n                        return { ...pre, [next.key]: (next.value || '').split(',') }\r\n                    }\r\n\r\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'datePicker') {\r\n                        let value = next.value;\r\n                        value = moment(value)\r\n                        return { ...pre, [next.key]: value }\r\n                    }\r\n\r\n                    if ((updateColumnsMap[next.key] || {})['ui-type'] === 'list') {\r\n                        const value = (next.value || []).map((item: any) => {\r\n                            for (const listItemKey in item) {\r\n                                if (Object.prototype.hasOwnProperty.call(item, listItemKey)) {\r\n                                    const listItemValue = item[listItemKey];\r\n                                    if ((updateColumnsMap[listItemKey] || {})['ui-type'] === 'datePicker') {\r\n                                        item[listItemKey] = moment(listItemValue)\r\n                                    }\r\n                                }\r\n                            }\r\n                            return item\r\n                        })\r\n                        return { ...pre, [next.key]: value }\r\n                    }\r\n\r\n                    return { ...pre, [next.key]: next.value }\r\n                }, {})}\r\n                loading={loadingUpdate || loadingDetail}\r\n                visible={visableUpdate}\r\n                onCancel={() => { setVisableUpdate(false) }}\r\n                onCreate={(values) => {\r\n                    setLoadingUpdate(true)\r\n                    setDataDetail([])\r\n                    for (const key in values) {\r\n                        if (Object.prototype.hasOwnProperty.call(values, key)) {\r\n                            const value = values[key];\r\n                            if (Array.isArray(value)) {\r\n                                if (value[0] && Object.prototype.toString.call(value[0]) === '[object Object]') {\r\n                                    continue\r\n                                }\r\n                                values[key] = values[key].join(',')\r\n                            }\r\n                        }\r\n                    }\r\n                    actionADUGTemplateUpdate(`${baseUrlRef.current}${values[primaryKey]}`, values)\r\n                        .then(res => {\r\n                            message.success(`${t('更新')} ${labelTitle} ${t('成功')}`)\r\n                            setVisableUpdate(false)\r\n                            fetchData({\r\n                                ...fetchDataParams,\r\n                                pageConf: pageInfo,\r\n                                params: filterValues,\r\n                                sorter: sorterParam,\r\n                                paramsMap: filterParamsMap\r\n                            });\r\n                        })\r\n                        .catch(err => {\r\n                            message.error(`${t('更新')} ${labelTitle} ${t('失败')}`)\r\n                        })\r\n                        .finally(() => { setLoadingUpdate(false) })\r\n                }}\r\n            >\r\n                {\r\n                    (form: FormInstance) => <DynamicForm form={form} primaryKey={primaryKey} config={dynamicFormConfigUpdate} linkageConfig={columnRelateFormat} configGroup={dynamicFormGroupConfigUpdate} />\r\n                }\r\n            </ModalForm>\r\n            {/* 详情 */}\r\n            <Modal\r\n                title={`${labelTitle} ${t('详情')}`}\r\n                visible={visableDetail}\r\n                footer={null}\r\n                width={800}\r\n                destroyOnClose\r\n                onCancel={() => { setVisableDetail(false) }}>\r\n                <Spin spinning={loadingDetail}>\r\n                    <div className=\"pb32\" style={{ minHeight: 300 }}>\r\n                        {\r\n                            dataDetail.map((item, index) => {\r\n                                return <Row className=\"mb16\" key={`dataDetail_${index}`}>\r\n                                    <Col span={6}><div className=\"ta-r\"><strong>{item.label}：</strong></div></Col>\r\n                                    <Col span={18}><pre style={{ whiteSpace: 'break-spaces' }} dangerouslySetInnerHTML={{\r\n                                        __html: (() => {\r\n                                            let content = item.value\r\n                                            if (Object.prototype.toString.call(item.value) === '[object Object]' || Object.prototype.toString.call(item.value) === '[object Array]') {\r\n                                                try {\r\n                                                    content = JSON.stringify(item.value)\r\n                                                } catch (error) { }\r\n                                            }\r\n                                            return content\r\n                                        })()\r\n                                    }}></pre></Col>\r\n                                </Row>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </Spin>\r\n            </Modal>\r\n\r\n            <TitleHeader title={<>\r\n                {\r\n                    (props?.isSubRoute || getParam('targetId')) ? <Button className=\"mr16\" onClick={() => {\r\n                        navigate('/data/metadata/metadata_dimension')\r\n                        window.location.reload()\r\n                    }}><RollbackOutlined />{t('返回')}</Button> : null\r\n                }\r\n                <span>{labelTitle}</span>\r\n            </>} breadcrumbs={(props?.breadcrumbs || []).map((crumbs, idx) => {\r\n                return <span key={`templateTitle_${props?.name}_${idx}`} className=\"c-icon-b fs12\">/<span className=\"plr2\">{crumbs}</span></span>\r\n            })} >\r\n                {\r\n                    helpUrl ? <div className=\"link\"><span className=\"pr4\" onClick={() => {\r\n                        window.open(helpUrl, 'blank')\r\n                    }}>{t('帮助链接')}</span><QuestionCircleOutlined /></div> : null\r\n                }\r\n            </TitleHeader>\r\n            <Content className=\"appmgmt-content bg-title h100 d-f fd-c\">\r\n                <div className=\"mlr16 mb16 flex1 bg-w\">\r\n                    {\r\n                        !!filterParams.length && <MixSearch values={filterValues} params={filterParams} onChange={(values) => {\r\n                            localStorage.setItem(`filter_${location.pathname}${location.search}`, JSON.stringify(values))\r\n                            setFilterValues(values)\r\n                            fetchData({\r\n                                ...fetchDataParams,\r\n                                pageConf: pageInfoInit,\r\n                                params: values,\r\n                                sorter: sorterParam,\r\n                                paramsMap: filterParamsMap\r\n                            });\r\n                        }} />\r\n                    }\r\n\r\n                    {\r\n                        isEchartShow ? <ChartOptionTempalte url={baseUrl} /> : null\r\n                    }\r\n\r\n                    {\r\n                        list_ui_type !== 'card' ? <TableBox\r\n                            cancelExportData={true}\r\n                            tableKey={`tablebox_${location.pathname}`}\r\n                            titleNode={<Col className=\"tablebox-title\">\r\n                                <div className=\"d-f ac\">\r\n                                    <div className=\"mr8\">{listTitle || ''}</div>\r\n                                    {\r\n                                        isShowCollect ? <div className=\"pb2\">\r\n                                            <Switch checked={isAllDataList} checkedChildren={t('全部')} unCheckedChildren={t('我的收藏')} defaultChecked onChange={(checked) => {\r\n                                                setIsAllDataList(checked)\r\n                                                fetchData({\r\n                                                    ...fetchDataParams,\r\n                                                    pageConf: pageInfoInit,\r\n                                                    params: filterValues,\r\n                                                    sorter: sorterParam,\r\n                                                    paramsMap: filterParamsMap,\r\n                                                    only_favorite: !checked\r\n                                                });\r\n                                            }} />\r\n                                        </div> : null\r\n                                    }\r\n                                </div>\r\n                            </Col>}\r\n                            buttonNode={<div className=\"d-f ac\">\r\n                                {\r\n                                    opsLink && opsLink.length ? opsLink.map(config => {\r\n                                        return <Button type=\"primary\" className=\"mr16\" onClick={() => {\r\n                                            window.open(config.url, 'bank')\r\n                                        }}>{config.text}</Button>\r\n                                    }) : null\r\n                                }\r\n\r\n                                {\r\n                                    permissions.includes('can_add') ? <Button className=\"mr16\" type=\"primary\" onClick={() => setVisableAdd(true)}>{t('添加')}{labelTitle}<PlusOutlined /></Button> : null\r\n                                }\r\n                                <div>\r\n                                    <Dropdown overlay={<Menu>\r\n                                        {\r\n                                            multipleAction.map((action, index) => {\r\n                                                return <Menu.Item key={`table_muliple_${index}`}>\r\n                                                    <span className=\"link\" onClick={() => handleMultiRecord(action)}>\r\n                                                        {`${t('批量')} ${action.text}`}\r\n                                                    </span>\r\n                                                </Menu.Item>\r\n                                            })\r\n                                        }\r\n\r\n                                    </Menu>}>\r\n                                        <Button>{t('批量操作')} <DownOutlined /></Button>\r\n                                    </Dropdown>\r\n                                </div>\r\n                                {\r\n                                    isImportData ? <div className=\"d-f ml16\">\r\n                                        <Tooltip color=\"#fff\" title={<span className=\"tips-content-b\"><div>{t('注意：csv逗号分隔')}，</div><div>{t('第一行为列的英文名')}</div> <div className=\"link\" onClick={() => {\r\n                                            window.open(`${window.location.origin}${baseUrlRef.current}download_template`)\r\n                                        }}>{(t('下载导入模板'))}</div></span>} placement=\"topLeft\">\r\n                                            <Upload {...uploadConfig}>\r\n                                                <Button className=\"\" icon={<UploadOutlined />}>{t('批量导入数据')}</Button>\r\n                                            </Upload>\r\n                                        </Tooltip>\r\n                                    </div> : null\r\n                                }\r\n                                {\r\n                                    isDownLoadData ? <Button className=\"ml16\" onClick={() => {\r\n                                        Modal.confirm({\r\n                                            title: t('导出数据'),\r\n                                            icon: <ExclamationCircleOutlined />,\r\n                                            content: '',\r\n                                            okText: t('确认导出数据'),\r\n                                            cancelText: t('取消'),\r\n                                            onOk() {\r\n                                                const formatData = formatFilterParams(filterValues, filterParamsMap)\r\n                                                const form_data = JSON.stringify(formatData)\r\n                                                window.open(`${window.location.origin}${baseUrlRef.current}download?form_data=${form_data}`)\r\n                                                message.success(t('导出成功'));\r\n                                            },\r\n                                            onCancel() { },\r\n                                        });\r\n                                    }}>{t('批量导出')}  <ExportOutlined /></Button> : null\r\n                                }\r\n\r\n                            </div>}\r\n                            rowKey={(record: any) => {\r\n                                return JSON.stringify(record)\r\n                            }}\r\n                            columns={currentColumns}\r\n                            loading={loading}\r\n                            pagination={pageInfo}\r\n                            dataSource={dataList}\r\n                            onChange={(pageInfo: any, filters, sorter: any) => {\r\n                                const tarSorter = sorter.order ? {\r\n                                    order_column: sorter.columnKey,\r\n                                    order_direction: sorter.order === \"ascend\" ? 'asc' : 'desc'\r\n                                } as ISorterParam : undefined\r\n\r\n                                fetchData({\r\n                                    ...fetchDataParams,\r\n                                    pageConf: pageInfo,\r\n                                    params: filterValues,\r\n                                    paramsMap: filterParamsMap,\r\n                                    sorter: tarSorter\r\n                                });\r\n                            }}\r\n                            rowSelection={{\r\n                                type: 'checkbox',\r\n                                fixed: 'left',\r\n                                columnWidth: 32,\r\n                                selectedRowKeys,\r\n                                onChange: (selectedRowKeys) => {\r\n                                    setSelectedRowKeys(selectedRowKeys)\r\n                                }\r\n                            }}\r\n                            scroll={{ x: tableWidth, y: scrollY }}\r\n                        /> : <div className=\"bg-w p16\">\r\n                            <div className=\"d-f fw\">\r\n                                {\r\n                                    dataList.map((row, rowIndex) => {\r\n                                        return <div style={{ overflowY: 'auto', width: list_ui_args?.card_width, height: list_ui_args?.card_height }} key={`card${rowIndex}`} className=\"card-row mr16 mb16\" >\r\n                                            {\r\n                                                Object.keys(row).map((key, itemIndex) => {\r\n                                                    if (listColumns.includes(key)) {\r\n                                                        return <div style={{ wordBreak: 'break-all' }} key={`row${rowIndex}${itemIndex}`} dangerouslySetInnerHTML={{ __html: row[key] }}></div>\r\n                                                    }\r\n                                                    return null\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            <div className=\"ta-r\">\r\n                                <Pagination {...pageInfo} onChange={(page, pageSize) => {\r\n                                    fetchData({\r\n                                        ...fetchDataParams,\r\n                                        pageConf: {\r\n                                            ...pageInfo,\r\n                                            current: page,\r\n                                            pageSize\r\n                                        },\r\n                                        params: filterValues,\r\n                                        paramsMap: filterParamsMap,\r\n                                    });\r\n                                }} />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Content>\r\n        </div >\r\n    );\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { actionADUGTemplateChartOption } from '../api/kubeflowApi'\r\nimport EchartCore, { ECOption } from '../components/EchartCore/EchartCore'\r\n\r\ninterface IProps {\r\n    url?: string\r\n}\r\n\r\nexport default function ChartOptionTempalte(props: IProps) {\r\n    const [option, setOption] = useState<ECOption>({})\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (props.url) {\r\n            actionADUGTemplateChartOption(`${props.url}echart`, {}).then(res => {\r\n                const option = res.data.result\r\n                var currentOps: any = {}\r\n                eval(`currentOps=${option}`)\r\n                setOption(currentOps)\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }, [props.url])\r\n\r\n    return (\r\n        <EchartCore option={option} loading={loading} />\r\n    )\r\n}\r\n"],"names":["defaultChartStyle","height","EchartCore","props","useState","chartInstance","setChartInstance","id","Math","random","toString","substring","useTranslation","t","option","i18n","useEffect","chartDom","document","getElementById","chart","echarts","setOption","data","spinning","loading","className","style","isNoData","InputSearch","inputRef","options","dataCache","setDataCache","value","setValue","dataFilter","isOpenSearchMatch","filter","item","indexOf","handleChange","onChange","highlightKeyWord","keyWord","index","preStr","nextStr","length","debounceScroll","fun","timer","time","args","clearTimeout","setTimeout","apply","debounce","onScrollButtom","labelName","htmlFor","width","disabled","placeholder","maxLength","e","target","onKeyPress","nativeEvent","keyCode","blur","onSearch","currentTarget","ref","element","SearchOutlined","onScroll","stopPropagation","scrollTop","clientHeight","scrollHeight","maxHeight","right","top","map","onMouseDown","onClick","handleClick","CopyToClipboard","require","ResizableTitle","onResize","restProps","Resizable","handle","draggableOpts","enableUserSelectHack","userSelect","exportDataVisible","setExportDataVisible","header","dataFormat","setDataFormat","filterValue","setFilterValue","columns","cols","setCols","handleResize","_","size","temp","tableWidth","reduce","pre","next","localStorage","setItem","tableKey","JSON","stringify","setCurrentTableScroll","currentTableScroll","x","customColumns","col","onHeaderCell","column","scroll","dataSource","dataIndex","handdleFilterHeader","dataColumns","sheetHeader","title","tarData","forEach","dataRow","row","colName","res","push","handleExportJira","str","join","rowKey","Object","values","handleExportText","direction","maskClosable","centered","bodyStyle","overflow","visible","onCancel","footer","position","label","defaultValue","bottom","type","tab","text","onCopy","message","cursor","minHeight","titleNode","buttonNode","cancelExportData","justify","align","marginLeft","renderEmpty","flexDirection","src","emptyImg","alt","components","cell","pagination","rowSelection","Title","Typography","styles","noBorderBottom","borderBottom","level","marginBottom","breadcrumbs","children","Form","form","updateState","React","formData","setFieldsValue","currentChange","allValues","formChangeRes","setFormChangeRes","destroyOnClose","okText","cancelText","resetFields","onOk","console","log","getFieldsValue","validateFields","then","onCreate","catch","info","onValuesChange","labelCol","span","wrapperCol","layout","name","prototype","call","Option","Select","collapsed","setCollapsed","formatParamsData","indexKey","params","paramsData","setParamsData","currentParamsData","setCurrentParamsData","Map","paramsDataMap","setParamsDataMap","group","key","undefined","i","j","used","formatData","dataMap","param","set","handleFinishForm","preVal","tarVal","handleRenderValueEl","getFieldValue","onPressEnter","handlePressEnter","currentItem","get","defalutValue","placeHolder","currentOptions","dropdownMatchSelectWidth","showSearch","mode","optionFilterProp","onFinish","initialValues","gutter","marginRight","fields","add","remove","field","compact","noStyle","rules","required","usedKey","includes","selectActionRemove","display","shouldUpdate","DeleteOutlined","PlusOutlined","flex","htmlType","DownOutlined","UpOutlined","FileUploadPlus","setFileLoading","fileList","setFileList","createMediaPreview","file","fileIndex","filetype","url","window","createObjectURL","URL","webkitURL","getObjectURL","currentFileList","splice","borderBottomLeftRadius","zIndex","color","controls","borderRadius","showUploadList","customRequest","tarList","Promise","all","resolve","reject","replace","reader","FileReader","readAsDataURL","onload","result","beforeUpload","maxCount","isFormatOk","format","isLt2M","maxSize","status","InboxOutlined","VideoCameraAddOutlined","AudioOutlined","calculateId","strList","split","charCodeAt","DynamicForm","current","setCurrent","config","currentConfig","_setCurrentConfig","currentConfigRef","useRef","setCurrentConfig","configGroup","currentConfigGroup","_setCurrentConfigGroup","currentConfigGroupRef","setCurrentConfigGroup","resetFieldProps","linkageConfig","optionInlinkAge","configItem","dep","valueId","effect","effectOption","findOptionInLinkAge","tarConfig","setValueInConfig","tarConfigGroup","configList","setValueInConfigGroup","keys","formValues","entries","renderInput","itemProps","initialValue","extra","tips","placement","dangerouslySetInnerHTML","__html","QuestionCircleOutlined","description","disable","dispatchRenderFormItem","retry_info","onRetryInfoChange","renderInputSelect","autoSize","minRows","renderTextArea","isRefresh","SyncOutlined","multiple","renderSelect","locale","showTime","disabledDate","moment","endOf","renderDatePicker","renderRangePicker","renderRadio","renderFileUpload","renderFormItem","list","restField","alignItems","minWidth","listItem","labelAlign","danger","block","icon","MinusCircleOutlined","primaryKey","hidden","Step","currentConfigGroupNameList","err","TaskListManager","navigate","useNavigate","location","useLocation","dataList","setDataList","setLoading","loadingAdd","setLoadingAdd","getParam","visableAdd","setVisableAdd","loadingUpdate","setLoadingUpdate","visableUpdate","setVisableUpdate","loadingDetail","setLoadingDetail","visableDetail","setVisableDetail","selectedRowKeys","setSelectedRowKeys","pageInfoInit","pageSize","total","showSizeChanger","showQuickJumper","pageSizeOptions","showTotal","pageInfo","setPageInfo","currentColumns","setCurrentColumns","filterParams","setFilterParams","filterValues","_setFilterValues","filterValuesRef","setFilterValues","dynamicFormConfigAdd","setDynamicFormConfigAdd","dynamicFormConfigUpdate","setDynamicFormConfigUpdate","dynamicFormGroupConfigAdd","setDynamicFormGroupConfigAdd","dynamicFormGroupConfigUpdate","setDynamicFormGroupConfigUpdate","customFormData","parse","dynamicFormDataAdd","setDynamicFormDataAdd","updateColumnsMap","setUpdateColumnsMap","labelMap","_setLabelMap","labelMapRef","dataDetail","setDataDetail","setTableWidth","permissions","setPermissions","filterParamsMap","setFilterParamsMap","helpUrl","setHelpUrl","baseUrl","_setBaseUrl","baseUrlRef","isImportData","setIsImportData","isDownLoadData","setIsDownLoadData","columnRelateFormat","setColumnRelateFormat","multipleAction","setMultipleAction","sorterParam","setSorterParam","setPrimaryKey","labelTitle","setLabelTitle","list_ui_type","setList_ui_type","list_ui_args","setList_ui_args","opsLink","setOpsLink","listColumns","setListColumns","isAllDataList","_setIsAllDataList","isAllDataListRef","isShowCollect","_setIsShowCollect","isShowCollectRef","isEchartShow","setIsEchartShow","setPageSize","listTitle","setListTitle","scrollY","setScrollY","fetchDataParams","pageConf","paramsMap","sorter","getTableScroll","createDyFormConfig","label_columns","description_columns","validators","pattern","RegExp","regex","min","max","default","targetId","getADUGTemplateApiInfo","list_columns","filters","add_columns","edit_columns","add_fieldsets","edit_fieldsets","help_url","order_columns","action","route_base","column_related","primary_key","label_title","cols_width","import_data","download_data","ops_link","enable_favorite","echart","page_size","list_title","hasAction","related","cacheColumns","getItem","pathname","cacheColumnsWidthMap","columnRelatedFormat","src_columns","des_columns","ePre","eNext","src_value","des_value","a","b","render","record","tarRes","actionList","singleAction","single","tableAction","fixed","overlay","Modal","ExclamationCircleOutlined","content","actionADUGTemplateFavorite","fetchData","actionADUGTemplateCancelFavorite","fetchDataDetail","formConfigUpdate","formGroupConfigUpdate","currentData","expanded","okButtonProps","actionADUGTemplateDelete","confirmation","actionADUGTemplateSingle","link","open","tarColumns","addColumnsMap","reTryInfoQuene","reTryInfoFlag","formRes","hasOwnProperty","handleReTryInfo","tar","actionADUGTemplateRetryInfo","exist_add_args","formConfigAdd","formGroupConfigAdd","formReset","resTar","finally","itemInfo","tarFilter","oprList","operator","currentFilterValues","localCacheFilter","search","urlFilter","error","localFilter","setBaseUrl","setLabelMap","currentTableWidth","formatFilterParams","temlateId","model_name","opr","sourceOprList","currentOpr","only_favorite","form_data","str_related","page","getADUGTemplateList","count","getADUGTemplateDetail","detail","formatValue","last_name","uploadConfig","headers","authorization","isCSV","isXLS","isJson","isXLSX","notification","response","Array","isArray","actionADUGTemplateAdd","tarIndex","listItemKey","listItemValue","actionADUGTemplateUpdate","whiteSpace","isSubRoute","reload","RollbackOutlined","crumbs","idx","ChartOptionTempalte","TableBox","checked","checkedChildren","unCheckedChildren","defaultChecked","actionADUGTemplateMuliple","ids","handleMultiRecord","origin","UploadOutlined","ExportOutlined","tarSorter","order","order_column","columnKey","order_direction","columnWidth","y","rowIndex","overflowY","card_width","card_height","itemIndex","wordBreak","actionADUGTemplateChartOption","currentOps","eval"],"sourceRoot":""}